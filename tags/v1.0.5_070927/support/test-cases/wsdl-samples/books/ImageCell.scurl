||| Copyright (C) 1998-2007, Sumisho Computer Systems Corp.  All Rights Reserved.
|||
||| An OpenCurl project.

||| Licensed under the Apache License, Version 2.0 (the "License");
||| you may not use this file except in compliance with the License.
||| You may obtain a copy of the License at
||| 
|||     http://www.apache.org/licenses/LICENSE-2.0
||| 
||| Unless required by applicable law or agreed to in writing, software
||| distributed under the License is distributed on an "AS IS" BASIS,
||| WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
||| See the License for the specific language governing permissions and
||| limitations under the License.
{doc-next
    {purpose
        This class takes a {docref Url} that points to an image and displays
        it as an image in a {docref RecordGrid}.
    }
}
{define-class public open ImageCell
  {inherits StandardRecordGridCell}

  field private image-frame:Frame =
      {new Frame, width = {make-elastic}, height = {make-elastic}}

  {constructor public {default}
    {construct-super}
    set self.height = 60px
    {self.add-internal self.image-frame}
  }
  
  {doc-next
    {purpose
        Creates an image from the data associated with this cell.
    }
  }
  {method public open {refresh-data}:void
    let (data:String, valid?:bool) = {self.get-formatted-data}
    {if valid? and data != ""  then
        {self.image-frame.add
            replace? = true,
            {image source = {url data}}
        }
     else
        {self.image-frame.remove-child}
    }
  }
}
