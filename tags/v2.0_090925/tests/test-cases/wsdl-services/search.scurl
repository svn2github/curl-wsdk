{curl 6.0, 7.0 package}
{package COM.CURL.WSDL.search,
    {compiler-directives careful? = true}}

|| This file was generated with COM.CURL.WSDK.WSDL
|| WSDL file: file:///c:/_Doug/OpenCurl/WSDK/trunk/tests/test-cases/wsdl-services/search.wsdl

{import * from COM.CURL.WSDK.SOAP}
{define-class public LiveSearchService {inherits WSDLHTTPRPCPostClient}

  {method public {search parameters:SearchRequest}:(parameters:SearchResponse)
    let constant (responses:{Array-of any},
         headers:#{Array-of any},
         header-roles:#{Array-of #String},
         header-must-understands:#{Array-of bool},
         root-attributes:#{Array-of XMLAttribute}) =
        {self.call
            "search",
            {{Array-of any}
                parameters
            },
            {splice self.operations["search"]}
        }
    {return
        responses[0] asa SearchResponse
    }
  }


  {method public {define-search}:void
    set self.operations["search"] = 
        {Arguments
            {{Array-of #XMLName}
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "parameters"}
            },
            {{Array-of SOAPObjectType}
                {SOAPObjectType
                    xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "SearchRequest"},
                    curl-type = SearchRequest,
                    nillable? = true
                }
            },
            {{Array-of #XMLName}
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "parameters"}
            },
            {{Array-of SOAPObjectType}
                {SOAPObjectType
                    xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "SearchResponse"},
                    curl-type = SearchResponse,
                    nillable? = true
                }
            },
            null,
            soap-action = "http://schemas.microsoft.com/LiveSearch/2008/03/Search/Search",
            request-operation = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "SearchRequest"},
            response-operation = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "SearchResponse"},
            rpc-style? = false,
            write-type-attribute? = false,
            write-encoding-attribute? = false
    }
  }

  {method protected {define-operations}:void
     {self.define-search}
  }

  {method public {register-types
                 }:(type-mapper:SOAPTypeMapper,
                    element-name-to-xml-type:SOAPElementNameToXMLTypeMapper,
                    xml-type-to-curl-type:SOAPXMLTypeToCurlTypeMapper,
                    curl-type-to-xml-type:SOAPCurlTypeToXMLTypeMapper,
                    xml-type-to-element-name:SOAPXMLTypeToElementNameMapper
                   )
    let constant type-mapper:DefaultSOAPTypeMapper =
        {DefaultSOAPTypeMapper}
    let constant element-name-to-xml-type:DefaultSOAPElementNameToXMLTypeMapper =
        {DefaultSOAPElementNameToXMLTypeMapper}
    let constant xml-type-to-curl-type:DefaultSOAPXMLTypeToCurlTypeMapper =
        {DefaultSOAPXMLTypeToCurlTypeMapper}
    let constant curl-type-to-xml-type:DefaultSOAPCurlTypeToXMLTypeMapper =
        {DefaultSOAPCurlTypeToXMLTypeMapper}
    let constant xml-type-to-element-name:DefaultSOAPXMLTypeToElementNameMapper =
        {DefaultSOAPXMLTypeToElementNameMapper}
    {do
        let constant enum-marshaler:SOAPEnumMarshaler =
            {SOAPEnumMarshaler
                {SOAPObjectType
                    element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Adult"},
                    xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "AdultOption"},
                    curl-type = AdultOption
                },
                value-type = 
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                use-value? = true
            }
        {enum-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant soap-struct-marshaler:SOAPStructMarshaler =
        {SOAPStructMarshaler
            {SOAPObjectType
                element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "DeepLink"},
                xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "DeepLink"},
                curl-type = DeepLink,
                nillable? = true
            },
            {{Array-of #XMLName}
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Title"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Url"}
            },
            {{Array-of SOAPObjectType}
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                }
            },
            {{Array-of String}
                "title",
                "url"
            },
            optional-elements = 
                {{Set-of XMLName}
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Title"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Url"}
              },
            element-name-to-xml-type = element-name-to-xml-type,
            xml-type-to-curl-type = xml-type-to-curl-type,
            curl-type-to-xml-type = curl-type-to-xml-type,
            xml-type-to-element-name = xml-type-to-element-name
        }
        {soap-struct-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant soap-struct-marshaler:SOAPStructMarshaler =
        {SOAPStructMarshaler
            {SOAPObjectType
                element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Error"},
                xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Error"},
                curl-type = Error,
                nillable? = true
            },
            {{Array-of #XMLName}
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Code"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Message"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Parameter"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Value"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "HelpUrl"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "SourceType"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "SourceTypeErrorCode"}
            },
            {{Array-of SOAPObjectType}
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "unsignedInt"},
                    curl-type = uint32,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "unsignedInt"},
                    curl-type = uint32,
                    nillable? = true
                }
            },
            {{Array-of String}
                "code",
                "message",
                "parameter",
                "value",
                "help-url",
                "source-type",
                "source-type-error-code"
            },
            optional-elements = 
                {{Set-of XMLName}
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Code"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Message"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Parameter"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Value"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "HelpUrl"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "SourceType"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "SourceTypeErrorCode"}
              },
            element-name-to-xml-type = element-name-to-xml-type,
            xml-type-to-curl-type = xml-type-to-curl-type,
            curl-type-to-xml-type = curl-type-to-xml-type,
            xml-type-to-element-name = xml-type-to-element-name
        }
        {soap-struct-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant soap-struct-marshaler:SOAPStructMarshaler =
        {SOAPStructMarshaler
            {SOAPObjectType
                element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Image"},
                xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "ImageRequest"},
                curl-type = ImageRequest,
                nillable? = true
            },
            {{Array-of #XMLName}
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Offset"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Count"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Filters"}
            },
            {{Array-of SOAPObjectType}
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "unsignedInt"},
                    curl-type = uint32,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "unsignedInt"},
                    curl-type = uint32,
                    nillable? = true
                },
                {SOAPObjectType
                    element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Filters"},
                    xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "ArrayOfString"},
                    curl-type = {Array-of String},
                    nillable? = true
                }
            },
            {{Array-of String}
                "offset",
                "count",
                "filters"
            },
            optional-elements = 
                {{Set-of XMLName}
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Offset"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Count"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Filters"}
              },
            element-name-to-xml-type = element-name-to-xml-type,
            xml-type-to-curl-type = xml-type-to-curl-type,
            curl-type-to-xml-type = curl-type-to-xml-type,
            xml-type-to-element-name = xml-type-to-element-name
        }
        {soap-struct-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant soap-struct-marshaler:SOAPStructMarshaler =
        {SOAPStructMarshaler
            {SOAPObjectType
                element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Image"},
                xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "ImageResponse"},
                curl-type = ImageResponse,
                nillable? = true
            },
            {{Array-of #XMLName}
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Total"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Offset"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Results"}
            },
            {{Array-of SOAPObjectType}
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "unsignedInt"},
                    curl-type = uint32,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "unsignedInt"},
                    curl-type = uint32,
                    nillable? = true
                },
                {SOAPObjectType
                    element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Results"},
                    xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "ArrayOfImageResult"},
                    curl-type = {Array-of ImageResult},
                    nillable? = true
                }
            },
            {{Array-of String}
                "total",
                "offset",
                "results"
            },
            optional-elements = 
                {{Set-of XMLName}
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Total"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Offset"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Results"}
              },
            element-name-to-xml-type = element-name-to-xml-type,
            xml-type-to-curl-type = xml-type-to-curl-type,
            curl-type-to-xml-type = curl-type-to-xml-type,
            xml-type-to-element-name = xml-type-to-element-name
        }
        {soap-struct-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant soap-struct-marshaler:SOAPStructMarshaler =
        {SOAPStructMarshaler
            {SOAPObjectType
                element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "ImageResult"},
                xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "ImageResult"},
                curl-type = ImageResult,
                nillable? = true
            },
            {{Array-of #XMLName}
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Title"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "MediaUrl"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Url"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "DisplayUrl"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Width"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Height"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "FileSize"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "ContentType"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Thumbnail"}
            },
            {{Array-of SOAPObjectType}
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "unsignedInt"},
                    curl-type = uint32,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "unsignedInt"},
                    curl-type = uint32,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "unsignedInt"},
                    curl-type = uint32,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                {SOAPObjectType
                    element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Thumbnail"},
                    xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Thumbnail"},
                    curl-type = Thumbnail,
                    nillable? = true
                }
            },
            {{Array-of String}
                "title",
                "media-url",
                "url",
                "display-url",
                "width",
                "height",
                "file-size",
                "content-type",
                "thumbnail"
            },
            optional-elements = 
                {{Set-of XMLName}
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Title"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "MediaUrl"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Url"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "DisplayUrl"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Width"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Height"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "FileSize"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "ContentType"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Thumbnail"}
              },
            element-name-to-xml-type = element-name-to-xml-type,
            xml-type-to-curl-type = xml-type-to-curl-type,
            curl-type-to-xml-type = curl-type-to-xml-type,
            xml-type-to-element-name = xml-type-to-element-name
        }
        {soap-struct-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant soap-struct-marshaler:SOAPStructMarshaler =
        {SOAPStructMarshaler
            {SOAPObjectType
                element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "InstantAnswer"},
                xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "InstantAnswerResponse"},
                curl-type = InstantAnswerResponse,
                nillable? = true
            },
            {{Array-of #XMLName}
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Results"}
            },
            {{Array-of SOAPObjectType}
                {SOAPObjectType
                    element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Results"},
                    xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "ArrayOfInstantAnswerResult"},
                    curl-type = {Array-of InstantAnswerResult},
                    nillable? = true
                }
            },
            {{Array-of String}
                "results"
            },
            optional-elements = 
                {{Set-of XMLName}
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Results"}
              },
            element-name-to-xml-type = element-name-to-xml-type,
            xml-type-to-curl-type = xml-type-to-curl-type,
            curl-type-to-xml-type = curl-type-to-xml-type,
            xml-type-to-element-name = xml-type-to-element-name
        }
        {soap-struct-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant soap-struct-marshaler:SOAPStructMarshaler =
        {SOAPStructMarshaler
            {SOAPObjectType
                element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "InstantAnswerResult"},
                xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "InstantAnswerResult"},
                curl-type = InstantAnswerResult,
                nillable? = true
            },
            {{Array-of #XMLName}
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "ContentType"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Title"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "ClickThroughUrl"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Url"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Attribution"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "InstantAnswerSpecificData"}
            },
            {{Array-of SOAPObjectType}
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                }
            },
            {{Array-of String}
                "content-type",
                "title",
                "click-through-url",
                "url",
                "attribution",
                "instant-answer-specific-data"
            },
            optional-elements = 
                {{Set-of XMLName}
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "ContentType"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Title"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "ClickThroughUrl"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Url"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Attribution"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "InstantAnswerSpecificData"}
              },
            element-name-to-xml-type = element-name-to-xml-type,
            xml-type-to-curl-type = xml-type-to-curl-type,
            curl-type-to-xml-type = curl-type-to-xml-type,
            xml-type-to-element-name = xml-type-to-element-name
        }
        {soap-struct-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant soap-struct-marshaler:SOAPStructMarshaler =
        {SOAPStructMarshaler
            {SOAPObjectType
                element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "MobileWeb"},
                xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "MobileWebRequest"},
                curl-type = MobileWebRequest,
                nillable? = true
            },
            {{Array-of #XMLName}
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Offset"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Count"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Options"}
            },
            {{Array-of SOAPObjectType}
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "unsignedInt"},
                    curl-type = uint32,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "unsignedInt"},
                    curl-type = uint32,
                    nillable? = true
                },
                {SOAPObjectType
                    element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Options"},
                    xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "ArrayOfMobileWebSearchOption"},
                    curl-type = {Array-of MobileWebSearchOption},
                    nillable? = true
                }
            },
            {{Array-of String}
                "offset",
                "count",
                "options"
            },
            optional-elements = 
                {{Set-of XMLName}
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Offset"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Count"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Options"}
              },
            element-name-to-xml-type = element-name-to-xml-type,
            xml-type-to-curl-type = xml-type-to-curl-type,
            curl-type-to-xml-type = curl-type-to-xml-type,
            xml-type-to-element-name = xml-type-to-element-name
        }
        {soap-struct-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant soap-struct-marshaler:SOAPStructMarshaler =
        {SOAPStructMarshaler
            {SOAPObjectType
                element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "MobileWeb"},
                xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "MobileWebResponse"},
                curl-type = MobileWebResponse,
                nillable? = true
            },
            {{Array-of #XMLName}
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Total"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Offset"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Results"}
            },
            {{Array-of SOAPObjectType}
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "unsignedInt"},
                    curl-type = uint32,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "unsignedInt"},
                    curl-type = uint32,
                    nillable? = true
                },
                {SOAPObjectType
                    element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Results"},
                    xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "ArrayOfMobileWebResult"},
                    curl-type = {Array-of MobileWebResult},
                    nillable? = true
                }
            },
            {{Array-of String}
                "total",
                "offset",
                "results"
            },
            optional-elements = 
                {{Set-of XMLName}
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Total"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Offset"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Results"}
              },
            element-name-to-xml-type = element-name-to-xml-type,
            xml-type-to-curl-type = xml-type-to-curl-type,
            curl-type-to-xml-type = curl-type-to-xml-type,
            xml-type-to-element-name = xml-type-to-element-name
        }
        {soap-struct-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant soap-struct-marshaler:SOAPStructMarshaler =
        {SOAPStructMarshaler
            {SOAPObjectType
                element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "MobileWebResult"},
                xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "MobileWebResult"},
                curl-type = MobileWebResult,
                nillable? = true
            },
            {{Array-of #XMLName}
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Title"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Description"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Url"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "DisplayUrl"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "DateTime"}
            },
            {{Array-of SOAPObjectType}
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                }
            },
            {{Array-of String}
                "title",
                "description",
                "url",
                "display-url",
                "date-time"
            },
            optional-elements = 
                {{Set-of XMLName}
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Title"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Description"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Url"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "DisplayUrl"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "DateTime"}
              },
            element-name-to-xml-type = element-name-to-xml-type,
            xml-type-to-curl-type = xml-type-to-curl-type,
            curl-type-to-xml-type = curl-type-to-xml-type,
            xml-type-to-element-name = xml-type-to-element-name
        }
        {soap-struct-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant enum-marshaler:SOAPEnumMarshaler =
            {SOAPEnumMarshaler
                {SOAPObjectType
                    element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "MobileWebSearchOption"},
                    xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "MobileWebSearchOption"},
                    curl-type = MobileWebSearchOption
                },
                value-type = 
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                use-value? = true
            }
        {enum-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant soap-struct-marshaler:SOAPStructMarshaler =
        {SOAPStructMarshaler
            {SOAPObjectType
                element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "NewsArticle"},
                xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "NewsArticle"},
                curl-type = NewsArticle,
                nillable? = true
            },
            {{Array-of #XMLName}
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Title"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Url"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Source"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Snippet"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Date"}
            },
            {{Array-of SOAPObjectType}
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                }
            },
            {{Array-of String}
                "title",
                "url",
                "source",
                "snippet",
                "date"
            },
            optional-elements = 
                {{Set-of XMLName}
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Title"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Url"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Source"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Snippet"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Date"}
              },
            element-name-to-xml-type = element-name-to-xml-type,
            xml-type-to-curl-type = xml-type-to-curl-type,
            curl-type-to-xml-type = curl-type-to-xml-type,
            xml-type-to-element-name = xml-type-to-element-name
        }
        {soap-struct-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant soap-struct-marshaler:SOAPStructMarshaler =
        {SOAPStructMarshaler
            {SOAPObjectType
                element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "NewsCollection"},
                xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "NewsCollection"},
                curl-type = NewsCollection,
                nillable? = true
            },
            {{Array-of #XMLName}
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Name"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "NewsArticles"}
            },
            {{Array-of SOAPObjectType}
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                {SOAPObjectType
                    element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "NewsArticles"},
                    xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "ArrayOfNewsArticle"},
                    curl-type = {Array-of NewsArticle},
                    nillable? = true
                }
            },
            {{Array-of String}
                "name",
                "news-articles"
            },
            optional-elements = 
                {{Set-of XMLName}
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Name"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "NewsArticles"}
              },
            element-name-to-xml-type = element-name-to-xml-type,
            xml-type-to-curl-type = xml-type-to-curl-type,
            curl-type-to-xml-type = curl-type-to-xml-type,
            xml-type-to-element-name = xml-type-to-element-name
        }
        {soap-struct-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant soap-struct-marshaler:SOAPStructMarshaler =
        {SOAPStructMarshaler
            {SOAPObjectType
                element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "NewsRelatedSearch"},
                xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "NewsRelatedSearch"},
                curl-type = NewsRelatedSearch,
                nillable? = true
            },
            {{Array-of #XMLName}
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Title"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Url"}
            },
            {{Array-of SOAPObjectType}
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                }
            },
            {{Array-of String}
                "title",
                "url"
            },
            optional-elements = 
                {{Set-of XMLName}
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Title"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Url"}
              },
            element-name-to-xml-type = element-name-to-xml-type,
            xml-type-to-curl-type = xml-type-to-curl-type,
            curl-type-to-xml-type = curl-type-to-xml-type,
            xml-type-to-element-name = xml-type-to-element-name
        }
        {soap-struct-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant soap-struct-marshaler:SOAPStructMarshaler =
        {SOAPStructMarshaler
            {SOAPObjectType
                element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "News"},
                xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "NewsRequest"},
                curl-type = NewsRequest,
                nillable? = true
            },
            {{Array-of #XMLName}
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Offset"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Count"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "LocationOverride"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Category"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "SortBy"}
            },
            {{Array-of SOAPObjectType}
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "unsignedInt"},
                    curl-type = uint32,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "unsignedInt"},
                    curl-type = uint32,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                {SOAPObjectType
                    element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "SortBy"},
                    xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "NewsSortOption"},
                    curl-type = NewsSortOption,
                    nillable? = true
                }
            },
            {{Array-of String}
                "offset",
                "count",
                "location-override",
                "category",
                "sort-by"
            },
            optional-elements = 
                {{Set-of XMLName}
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Offset"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Count"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "LocationOverride"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Category"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "SortBy"}
              },
            element-name-to-xml-type = element-name-to-xml-type,
            xml-type-to-curl-type = xml-type-to-curl-type,
            curl-type-to-xml-type = curl-type-to-xml-type,
            xml-type-to-element-name = xml-type-to-element-name
        }
        {soap-struct-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant soap-struct-marshaler:SOAPStructMarshaler =
        {SOAPStructMarshaler
            {SOAPObjectType
                element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "News"},
                xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "NewsResponse"},
                curl-type = NewsResponse,
                nillable? = true
            },
            {{Array-of #XMLName}
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Total"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Offset"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "RelatedSearches"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Results"}
            },
            {{Array-of SOAPObjectType}
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "unsignedInt"},
                    curl-type = uint32,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "unsignedInt"},
                    curl-type = uint32,
                    nillable? = true
                },
                {SOAPObjectType
                    element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "RelatedSearches"},
                    xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "ArrayOfNewsRelatedSearch"},
                    curl-type = {Array-of NewsRelatedSearch},
                    nillable? = true
                },
                {SOAPObjectType
                    element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Results"},
                    xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "ArrayOfNewsResult"},
                    curl-type = {Array-of NewsResult},
                    nillable? = true
                }
            },
            {{Array-of String}
                "total",
                "offset",
                "related-searches",
                "results"
            },
            optional-elements = 
                {{Set-of XMLName}
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Total"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Offset"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "RelatedSearches"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Results"}
              },
            element-name-to-xml-type = element-name-to-xml-type,
            xml-type-to-curl-type = xml-type-to-curl-type,
            curl-type-to-xml-type = curl-type-to-xml-type,
            xml-type-to-element-name = xml-type-to-element-name
        }
        {soap-struct-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant soap-struct-marshaler:SOAPStructMarshaler =
        {SOAPStructMarshaler
            {SOAPObjectType
                element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "NewsResult"},
                xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "NewsResult"},
                curl-type = NewsResult,
                nillable? = true
            },
            {{Array-of #XMLName}
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Title"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Url"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Source"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Snippet"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Date"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "BreakingNews"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "NewsCollections"}
            },
            {{Array-of SOAPObjectType}
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "unsignedInt"},
                    curl-type = uint32,
                    nillable? = true
                },
                {SOAPObjectType
                    element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "NewsCollections"},
                    xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "ArrayOfNewsCollection"},
                    curl-type = {Array-of NewsCollection},
                    nillable? = true
                }
            },
            {{Array-of String}
                "title",
                "url",
                "source",
                "snippet",
                "date",
                "breaking-news",
                "news-collections"
            },
            optional-elements = 
                {{Set-of XMLName}
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Title"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Url"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Source"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Snippet"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Date"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "BreakingNews"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "NewsCollections"}
              },
            element-name-to-xml-type = element-name-to-xml-type,
            xml-type-to-curl-type = xml-type-to-curl-type,
            curl-type-to-xml-type = curl-type-to-xml-type,
            xml-type-to-element-name = xml-type-to-element-name
        }
        {soap-struct-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant enum-marshaler:SOAPEnumMarshaler =
            {SOAPEnumMarshaler
                {SOAPObjectType
                    element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "SortBy"},
                    xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "NewsSortOption"},
                    curl-type = NewsSortOption
                },
                value-type = 
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                use-value? = true
            }
        {enum-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant soap-struct-marshaler:SOAPStructMarshaler =
        {SOAPStructMarshaler
            {SOAPObjectType
                element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Phonebook"},
                xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "PhonebookRequest"},
                curl-type = PhonebookRequest,
                nillable? = true
            },
            {{Array-of #XMLName}
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Offset"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Count"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "FileType"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "SortBy"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "LocId"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Category"}
            },
            {{Array-of SOAPObjectType}
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "unsignedInt"},
                    curl-type = uint32,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "unsignedInt"},
                    curl-type = uint32,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                {SOAPObjectType
                    element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "SortBy"},
                    xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "PhonebookSortOption"},
                    curl-type = PhonebookSortOption,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                }
            },
            {{Array-of String}
                "offset",
                "count",
                "file-type",
                "sort-by",
                "loc-id",
                "category"
            },
            optional-elements = 
                {{Set-of XMLName}
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Offset"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Count"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "FileType"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "SortBy"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "LocId"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Category"}
              },
            element-name-to-xml-type = element-name-to-xml-type,
            xml-type-to-curl-type = xml-type-to-curl-type,
            curl-type-to-xml-type = curl-type-to-xml-type,
            xml-type-to-element-name = xml-type-to-element-name
        }
        {soap-struct-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant soap-struct-marshaler:SOAPStructMarshaler =
        {SOAPStructMarshaler
            {SOAPObjectType
                element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Phonebook"},
                xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "PhonebookResponse"},
                curl-type = PhonebookResponse,
                nillable? = true
            },
            {{Array-of #XMLName}
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Total"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Offset"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "LocalSerpUrl"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Title"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Results"}
            },
            {{Array-of SOAPObjectType}
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "unsignedInt"},
                    curl-type = uint32,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "unsignedInt"},
                    curl-type = uint32,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                {SOAPObjectType
                    element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Results"},
                    xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "ArrayOfPhonebookResult"},
                    curl-type = {Array-of PhonebookResult},
                    nillable? = true
                }
            },
            {{Array-of String}
                "total",
                "offset",
                "local-serp-url",
                "title",
                "results"
            },
            optional-elements = 
                {{Set-of XMLName}
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Total"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Offset"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "LocalSerpUrl"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Title"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Results"}
              },
            element-name-to-xml-type = element-name-to-xml-type,
            xml-type-to-curl-type = xml-type-to-curl-type,
            curl-type-to-xml-type = curl-type-to-xml-type,
            xml-type-to-element-name = xml-type-to-element-name
        }
        {soap-struct-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant soap-struct-marshaler:SOAPStructMarshaler =
        {SOAPStructMarshaler
            {SOAPObjectType
                element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "PhonebookResult"},
                xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "PhonebookResult"},
                curl-type = PhonebookResult,
                nillable? = true
            },
            {{Array-of #XMLName}
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Title"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Url"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Business"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "PhoneNumber"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Address"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "City"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "StateOrProvince"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "CountryOrRegion"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "PostalCode"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Latitude"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Longitude"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "UniqueId"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "BusinessUrl"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "UserRating"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "ReviewCount"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "DisplayUrl"}
            },
            {{Array-of SOAPObjectType}
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "double"},
                    curl-type = double,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "double"},
                    curl-type = double,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "double"},
                    curl-type = double,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "unsignedInt"},
                    curl-type = uint32,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                }
            },
            {{Array-of String}
                "title",
                "url",
                "business",
                "phone-number",
                "address",
                "city",
                "state-or-province",
                "country-or-region",
                "postal-code",
                "latitude",
                "longitude",
                "unique-id",
                "business-url",
                "user-rating",
                "review-count",
                "display-url"
            },
            optional-elements = 
                {{Set-of XMLName}
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Title"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Url"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Business"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "PhoneNumber"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Address"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "City"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "StateOrProvince"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "CountryOrRegion"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "PostalCode"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Latitude"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Longitude"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "UniqueId"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "BusinessUrl"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "UserRating"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "ReviewCount"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "DisplayUrl"}
              },
            element-name-to-xml-type = element-name-to-xml-type,
            xml-type-to-curl-type = xml-type-to-curl-type,
            curl-type-to-xml-type = curl-type-to-xml-type,
            xml-type-to-element-name = xml-type-to-element-name
        }
        {soap-struct-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant enum-marshaler:SOAPEnumMarshaler =
            {SOAPEnumMarshaler
                {SOAPObjectType
                    element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "SortBy"},
                    xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "PhonebookSortOption"},
                    curl-type = PhonebookSortOption
                },
                value-type = 
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                use-value? = true
            }
        {enum-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant soap-struct-marshaler:SOAPStructMarshaler =
        {SOAPStructMarshaler
            {SOAPObjectType
                element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Query"},
                xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Query"},
                curl-type = Query,
                nillable? = true
            },
            {{Array-of #XMLName}
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "SearchTerms"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "AlteredQuery"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "AlterationOverrideQuery"}
            },
            {{Array-of SOAPObjectType}
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                }
            },
            {{Array-of String}
                "search-terms",
                "altered-query",
                "alteration-override-query"
            },
            optional-elements = 
                {{Set-of XMLName}
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "SearchTerms"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "AlteredQuery"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "AlterationOverrideQuery"}
              },
            element-name-to-xml-type = element-name-to-xml-type,
            xml-type-to-curl-type = xml-type-to-curl-type,
            curl-type-to-xml-type = curl-type-to-xml-type,
            xml-type-to-element-name = xml-type-to-element-name
        }
        {soap-struct-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant soap-struct-marshaler:SOAPStructMarshaler =
        {SOAPStructMarshaler
            {SOAPObjectType
                element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "RelatedSearch"},
                xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "RelatedSearchResponse"},
                curl-type = RelatedSearchResponse,
                nillable? = true
            },
            {{Array-of #XMLName}
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Results"}
            },
            {{Array-of SOAPObjectType}
                {SOAPObjectType
                    element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Results"},
                    xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "ArrayOfRelatedSearchResult"},
                    curl-type = {Array-of RelatedSearchResult},
                    nillable? = true
                }
            },
            {{Array-of String}
                "results"
            },
            optional-elements = 
                {{Set-of XMLName}
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Results"}
              },
            element-name-to-xml-type = element-name-to-xml-type,
            xml-type-to-curl-type = xml-type-to-curl-type,
            curl-type-to-xml-type = curl-type-to-xml-type,
            xml-type-to-element-name = xml-type-to-element-name
        }
        {soap-struct-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant soap-struct-marshaler:SOAPStructMarshaler =
        {SOAPStructMarshaler
            {SOAPObjectType
                element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "RelatedSearchResult"},
                xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "RelatedSearchResult"},
                curl-type = RelatedSearchResult,
                nillable? = true
            },
            {{Array-of #XMLName}
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Title"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Url"}
            },
            {{Array-of SOAPObjectType}
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                }
            },
            {{Array-of String}
                "title",
                "url"
            },
            optional-elements = 
                {{Set-of XMLName}
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Title"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Url"}
              },
            element-name-to-xml-type = element-name-to-xml-type,
            xml-type-to-curl-type = xml-type-to-curl-type,
            curl-type-to-xml-type = curl-type-to-xml-type,
            xml-type-to-element-name = xml-type-to-element-name
        }
        {soap-struct-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant enum-marshaler:SOAPEnumMarshaler =
            {SOAPEnumMarshaler
                {SOAPObjectType
                    element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "SearchOption"},
                    xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "SearchOption"},
                    curl-type = SearchOption
                },
                value-type = 
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                use-value? = true
            }
        {enum-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant soap-struct-marshaler:SOAPStructMarshaler =
        {SOAPStructMarshaler
            {SOAPObjectType
                xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "SearchRequest"},
                curl-type = SearchRequest,
                nillable? = true
            },
            {{Array-of #XMLName}
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Version"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Market"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "UILanguage"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Query"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "AppId"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Adult"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Latitude"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Longitude"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Radius"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Options"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Sources"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Web"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Image"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Phonebook"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Video"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "News"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "MobileWeb"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Translation"}
            },
            {{Array-of SOAPObjectType}
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String
                },
                {SOAPObjectType
                    element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Adult"},
                    xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "AdultOption"},
                    curl-type = AdultOption,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "double"},
                    curl-type = double,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "double"},
                    curl-type = double,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "double"},
                    curl-type = double,
                    nillable? = true
                },
                {SOAPObjectType
                    element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Options"},
                    xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "ArrayOfSearchOption"},
                    curl-type = {Array-of SearchOption},
                    nillable? = true
                },
                {SOAPObjectType
                    element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Sources"},
                    xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "ArrayOfSourceType"},
                    curl-type = {Array-of SourceType}
                },
                {SOAPObjectType
                    element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Web"},
                    xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "WebRequest"},
                    curl-type = WebRequest,
                    nillable? = true
                },
                {SOAPObjectType
                    element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Image"},
                    xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "ImageRequest"},
                    curl-type = ImageRequest,
                    nillable? = true
                },
                {SOAPObjectType
                    element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Phonebook"},
                    xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "PhonebookRequest"},
                    curl-type = PhonebookRequest,
                    nillable? = true
                },
                {SOAPObjectType
                    element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Video"},
                    xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "VideoRequest"},
                    curl-type = VideoRequest,
                    nillable? = true
                },
                {SOAPObjectType
                    element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "News"},
                    xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "NewsRequest"},
                    curl-type = NewsRequest,
                    nillable? = true
                },
                {SOAPObjectType
                    element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "MobileWeb"},
                    xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "MobileWebRequest"},
                    curl-type = MobileWebRequest,
                    nillable? = true
                },
                {SOAPObjectType
                    element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Translation"},
                    xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "TranslationRequest"},
                    curl-type = TranslationRequest,
                    nillable? = true
                }
            },
            {{Array-of String}
                "version",
                "market",
                "uilanguage",
                "query",
                "app-id",
                "adult",
                "latitude",
                "longitude",
                "radius",
                "options",
                "sources",
                "web",
                "image",
                "phonebook",
                "video",
                "news",
                "mobile-web",
                "translation"
            },
            optional-elements = 
                {{Set-of XMLName}
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Version"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Market"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "UILanguage"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Adult"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Latitude"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Longitude"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Radius"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Options"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Web"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Image"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Phonebook"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Video"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "News"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "MobileWeb"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Translation"}
              },
            element-name-to-xml-type = element-name-to-xml-type,
            xml-type-to-curl-type = xml-type-to-curl-type,
            curl-type-to-xml-type = curl-type-to-xml-type,
            xml-type-to-element-name = xml-type-to-element-name
        }
        {soap-struct-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant soap-struct-marshaler:SOAPStructMarshaler =
        {SOAPStructMarshaler
            {SOAPObjectType
                xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "SearchResponse"},
                curl-type = SearchResponse,
                nillable? = true
            },
            {{Array-of #XMLName}
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Version"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Query"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Spell"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Web"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Image"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "RelatedSearch"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Phonebook"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Video"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "InstantAnswer"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "News"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "MobileWeb"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Translation"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Errors"}
            },
            {{Array-of SOAPObjectType}
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String
                },
                {SOAPObjectType
                    element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Query"},
                    xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Query"},
                    curl-type = Query,
                    nillable? = true
                },
                {SOAPObjectType
                    element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Spell"},
                    xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "SpellResponse"},
                    curl-type = SpellResponse,
                    nillable? = true
                },
                {SOAPObjectType
                    element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Web"},
                    xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "WebResponse"},
                    curl-type = WebResponse,
                    nillable? = true
                },
                {SOAPObjectType
                    element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Image"},
                    xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "ImageResponse"},
                    curl-type = ImageResponse,
                    nillable? = true
                },
                {SOAPObjectType
                    element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "RelatedSearch"},
                    xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "RelatedSearchResponse"},
                    curl-type = RelatedSearchResponse,
                    nillable? = true
                },
                {SOAPObjectType
                    element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Phonebook"},
                    xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "PhonebookResponse"},
                    curl-type = PhonebookResponse,
                    nillable? = true
                },
                {SOAPObjectType
                    element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Video"},
                    xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "VideoResponse"},
                    curl-type = VideoResponse,
                    nillable? = true
                },
                {SOAPObjectType
                    element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "InstantAnswer"},
                    xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "InstantAnswerResponse"},
                    curl-type = InstantAnswerResponse,
                    nillable? = true
                },
                {SOAPObjectType
                    element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "News"},
                    xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "NewsResponse"},
                    curl-type = NewsResponse,
                    nillable? = true
                },
                {SOAPObjectType
                    element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "MobileWeb"},
                    xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "MobileWebResponse"},
                    curl-type = MobileWebResponse,
                    nillable? = true
                },
                {SOAPObjectType
                    element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Translation"},
                    xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "TranslationResponse"},
                    curl-type = TranslationResponse,
                    nillable? = true
                },
                {SOAPObjectType
                    element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Errors"},
                    xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "ArrayOfError"},
                    curl-type = {Array-of Error},
                    nillable? = true
                }
            },
            {{Array-of String}
                "version",
                "query",
                "spell",
                "web",
                "image",
                "related-search",
                "phonebook",
                "video",
                "instant-answer",
                "news",
                "mobile-web",
                "translation",
                "errors"
            },
            optional-elements = 
                {{Set-of XMLName}
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Query"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Spell"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Web"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Image"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "RelatedSearch"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Phonebook"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Video"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "InstantAnswer"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "News"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "MobileWeb"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Translation"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Errors"}
              },
            element-name-to-xml-type = element-name-to-xml-type,
            xml-type-to-curl-type = xml-type-to-curl-type,
            curl-type-to-xml-type = curl-type-to-xml-type,
            xml-type-to-element-name = xml-type-to-element-name
        }
        {soap-struct-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant enum-marshaler:SOAPEnumMarshaler =
            {SOAPEnumMarshaler
                {SOAPObjectType
                    element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "SourceType"},
                    xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "SourceType"},
                    curl-type = SourceType
                },
                value-type = 
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                use-value? = true
            }
        {enum-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant soap-struct-marshaler:SOAPStructMarshaler =
        {SOAPStructMarshaler
            {SOAPObjectType
                element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Spell"},
                xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "SpellResponse"},
                curl-type = SpellResponse,
                nillable? = true
            },
            {{Array-of #XMLName}
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Total"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Results"}
            },
            {{Array-of SOAPObjectType}
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "unsignedInt"},
                    curl-type = uint32,
                    nillable? = true
                },
                {SOAPObjectType
                    element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Results"},
                    xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "ArrayOfSpellResult"},
                    curl-type = {Array-of SpellResult},
                    nillable? = true
                }
            },
            {{Array-of String}
                "total",
                "results"
            },
            optional-elements = 
                {{Set-of XMLName}
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Total"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Results"}
              },
            element-name-to-xml-type = element-name-to-xml-type,
            xml-type-to-curl-type = xml-type-to-curl-type,
            curl-type-to-xml-type = curl-type-to-xml-type,
            xml-type-to-element-name = xml-type-to-element-name
        }
        {soap-struct-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant soap-struct-marshaler:SOAPStructMarshaler =
        {SOAPStructMarshaler
            {SOAPObjectType
                element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "SpellResult"},
                xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "SpellResult"},
                curl-type = SpellResult,
                nillable? = true
            },
            {{Array-of #XMLName}
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Value"}
            },
            {{Array-of SOAPObjectType}
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                }
            },
            {{Array-of String}
                "value"
            },
            optional-elements = 
                {{Set-of XMLName}
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Value"}
              },
            element-name-to-xml-type = element-name-to-xml-type,
            xml-type-to-curl-type = xml-type-to-curl-type,
            curl-type-to-xml-type = curl-type-to-xml-type,
            xml-type-to-element-name = xml-type-to-element-name
        }
        {soap-struct-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant soap-struct-marshaler:SOAPStructMarshaler =
        {SOAPStructMarshaler
            {SOAPObjectType
                element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Thumbnail"},
                xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Thumbnail"},
                curl-type = Thumbnail,
                nillable? = true
            },
            {{Array-of #XMLName}
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Url"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "ContentType"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Width"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Height"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "FileSize"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "RunTime"}
            },
            {{Array-of SOAPObjectType}
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "unsignedInt"},
                    curl-type = uint32,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "unsignedInt"},
                    curl-type = uint32,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "unsignedInt"},
                    curl-type = uint32,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "unsignedInt"},
                    curl-type = uint32,
                    nillable? = true
                }
            },
            {{Array-of String}
                "url",
                "content-type",
                "width",
                "height",
                "file-size",
                "run-time"
            },
            optional-elements = 
                {{Set-of XMLName}
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Url"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "ContentType"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Width"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Height"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "FileSize"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "RunTime"}
              },
            element-name-to-xml-type = element-name-to-xml-type,
            xml-type-to-curl-type = xml-type-to-curl-type,
            curl-type-to-xml-type = curl-type-to-xml-type,
            xml-type-to-element-name = xml-type-to-element-name
        }
        {soap-struct-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant soap-struct-marshaler:SOAPStructMarshaler =
        {SOAPStructMarshaler
            {SOAPObjectType
                element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Translation"},
                xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "TranslationRequest"},
                curl-type = TranslationRequest,
                nillable? = true
            },
            {{Array-of #XMLName}
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "SourceLanguage"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "TargetLanguage"}
            },
            {{Array-of SOAPObjectType}
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String
                }
            },
            {{Array-of String}
                "source-language",
                "target-language"
            },
            element-name-to-xml-type = element-name-to-xml-type,
            xml-type-to-curl-type = xml-type-to-curl-type,
            curl-type-to-xml-type = curl-type-to-xml-type,
            xml-type-to-element-name = xml-type-to-element-name
        }
        {soap-struct-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant soap-struct-marshaler:SOAPStructMarshaler =
        {SOAPStructMarshaler
            {SOAPObjectType
                element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Translation"},
                xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "TranslationResponse"},
                curl-type = TranslationResponse,
                nillable? = true
            },
            {{Array-of #XMLName}
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Results"}
            },
            {{Array-of SOAPObjectType}
                {SOAPObjectType
                    element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Results"},
                    xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "ArrayOfTranslationResult"},
                    curl-type = {Array-of TranslationResult},
                    nillable? = true
                }
            },
            {{Array-of String}
                "results"
            },
            optional-elements = 
                {{Set-of XMLName}
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Results"}
              },
            element-name-to-xml-type = element-name-to-xml-type,
            xml-type-to-curl-type = xml-type-to-curl-type,
            curl-type-to-xml-type = curl-type-to-xml-type,
            xml-type-to-element-name = xml-type-to-element-name
        }
        {soap-struct-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant soap-struct-marshaler:SOAPStructMarshaler =
        {SOAPStructMarshaler
            {SOAPObjectType
                element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "TranslationResult"},
                xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "TranslationResult"},
                curl-type = TranslationResult,
                nillable? = true
            },
            {{Array-of #XMLName}
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "TranslatedTerm"}
            },
            {{Array-of SOAPObjectType}
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                }
            },
            {{Array-of String}
                "translated-term"
            },
            optional-elements = 
                {{Set-of XMLName}
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "TranslatedTerm"}
              },
            element-name-to-xml-type = element-name-to-xml-type,
            xml-type-to-curl-type = xml-type-to-curl-type,
            curl-type-to-xml-type = curl-type-to-xml-type,
            xml-type-to-element-name = xml-type-to-element-name
        }
        {soap-struct-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant soap-struct-marshaler:SOAPStructMarshaler =
        {SOAPStructMarshaler
            {SOAPObjectType
                element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Video"},
                xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "VideoRequest"},
                curl-type = VideoRequest,
                nillable? = true
            },
            {{Array-of #XMLName}
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Offset"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Count"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Filters"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "SortBy"}
            },
            {{Array-of SOAPObjectType}
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "unsignedInt"},
                    curl-type = uint32,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "unsignedInt"},
                    curl-type = uint32,
                    nillable? = true
                },
                {SOAPObjectType
                    element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Filters"},
                    xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "ArrayOfString"},
                    curl-type = {Array-of String},
                    nillable? = true
                },
                {SOAPObjectType
                    element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "SortBy"},
                    xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "VideoSortOption"},
                    curl-type = VideoSortOption,
                    nillable? = true
                }
            },
            {{Array-of String}
                "offset",
                "count",
                "filters",
                "sort-by"
            },
            optional-elements = 
                {{Set-of XMLName}
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Offset"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Count"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Filters"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "SortBy"}
              },
            element-name-to-xml-type = element-name-to-xml-type,
            xml-type-to-curl-type = xml-type-to-curl-type,
            curl-type-to-xml-type = curl-type-to-xml-type,
            xml-type-to-element-name = xml-type-to-element-name
        }
        {soap-struct-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant soap-struct-marshaler:SOAPStructMarshaler =
        {SOAPStructMarshaler
            {SOAPObjectType
                element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Video"},
                xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "VideoResponse"},
                curl-type = VideoResponse,
                nillable? = true
            },
            {{Array-of #XMLName}
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Total"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Offset"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Results"}
            },
            {{Array-of SOAPObjectType}
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "unsignedInt"},
                    curl-type = uint32,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "unsignedInt"},
                    curl-type = uint32,
                    nillable? = true
                },
                {SOAPObjectType
                    element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Results"},
                    xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "ArrayOfVideoResult"},
                    curl-type = {Array-of VideoResult},
                    nillable? = true
                }
            },
            {{Array-of String}
                "total",
                "offset",
                "results"
            },
            optional-elements = 
                {{Set-of XMLName}
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Total"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Offset"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Results"}
              },
            element-name-to-xml-type = element-name-to-xml-type,
            xml-type-to-curl-type = xml-type-to-curl-type,
            curl-type-to-xml-type = curl-type-to-xml-type,
            xml-type-to-element-name = xml-type-to-element-name
        }
        {soap-struct-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant soap-struct-marshaler:SOAPStructMarshaler =
        {SOAPStructMarshaler
            {SOAPObjectType
                element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "VideoResult"},
                xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "VideoResult"},
                curl-type = VideoResult,
                nillable? = true
            },
            {{Array-of #XMLName}
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Title"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "PlayUrl"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "SourceTitle"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "RunTime"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "ClickThroughPageUrl"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "StaticThumbnail"}
            },
            {{Array-of SOAPObjectType}
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "unsignedInt"},
                    curl-type = uint32,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                {SOAPObjectType
                    element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "StaticThumbnail"},
                    xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Thumbnail"},
                    curl-type = Thumbnail,
                    nillable? = true
                }
            },
            {{Array-of String}
                "title",
                "play-url",
                "source-title",
                "run-time",
                "click-through-page-url",
                "static-thumbnail"
            },
            optional-elements = 
                {{Set-of XMLName}
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Title"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "PlayUrl"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "SourceTitle"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "RunTime"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "ClickThroughPageUrl"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "StaticThumbnail"}
              },
            element-name-to-xml-type = element-name-to-xml-type,
            xml-type-to-curl-type = xml-type-to-curl-type,
            curl-type-to-xml-type = curl-type-to-xml-type,
            xml-type-to-element-name = xml-type-to-element-name
        }
        {soap-struct-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant enum-marshaler:SOAPEnumMarshaler =
            {SOAPEnumMarshaler
                {SOAPObjectType
                    element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "SortBy"},
                    xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "VideoSortOption"},
                    curl-type = VideoSortOption
                },
                value-type = 
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                use-value? = true
            }
        {enum-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant soap-struct-marshaler:SOAPStructMarshaler =
        {SOAPStructMarshaler
            {SOAPObjectType
                element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Web"},
                xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "WebRequest"},
                curl-type = WebRequest,
                nillable? = true
            },
            {{Array-of #XMLName}
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Offset"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Count"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "FileType"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Options"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "SearchTags"}
            },
            {{Array-of SOAPObjectType}
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "unsignedInt"},
                    curl-type = uint32,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "unsignedInt"},
                    curl-type = uint32,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                {SOAPObjectType
                    element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Options"},
                    xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "ArrayOfWebSearchOption"},
                    curl-type = {Array-of WebSearchOption},
                    nillable? = true
                },
                {SOAPObjectType
                    element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "SearchTags"},
                    xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "ArrayOfString"},
                    curl-type = {Array-of String},
                    nillable? = true
                }
            },
            {{Array-of String}
                "offset",
                "count",
                "file-type",
                "options",
                "search-tags"
            },
            optional-elements = 
                {{Set-of XMLName}
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Offset"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Count"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "FileType"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Options"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "SearchTags"}
              },
            element-name-to-xml-type = element-name-to-xml-type,
            xml-type-to-curl-type = xml-type-to-curl-type,
            curl-type-to-xml-type = curl-type-to-xml-type,
            xml-type-to-element-name = xml-type-to-element-name
        }
        {soap-struct-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant soap-struct-marshaler:SOAPStructMarshaler =
        {SOAPStructMarshaler
            {SOAPObjectType
                element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Web"},
                xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "WebResponse"},
                curl-type = WebResponse,
                nillable? = true
            },
            {{Array-of #XMLName}
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Total"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Offset"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Results"}
            },
            {{Array-of SOAPObjectType}
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "unsignedInt"},
                    curl-type = uint32,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "unsignedInt"},
                    curl-type = uint32,
                    nillable? = true
                },
                {SOAPObjectType
                    element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Results"},
                    xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "ArrayOfWebResult"},
                    curl-type = {Array-of WebResult},
                    nillable? = true
                }
            },
            {{Array-of String}
                "total",
                "offset",
                "results"
            },
            optional-elements = 
                {{Set-of XMLName}
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Total"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Offset"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Results"}
              },
            element-name-to-xml-type = element-name-to-xml-type,
            xml-type-to-curl-type = xml-type-to-curl-type,
            curl-type-to-xml-type = curl-type-to-xml-type,
            xml-type-to-element-name = xml-type-to-element-name
        }
        {soap-struct-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant soap-struct-marshaler:SOAPStructMarshaler =
        {SOAPStructMarshaler
            {SOAPObjectType
                element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "WebResult"},
                xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "WebResult"},
                curl-type = WebResult,
                nillable? = true
            },
            {{Array-of #XMLName}
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Title"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Description"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Url"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "CacheUrl"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "DisplayUrl"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "DateTime"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "SearchTags"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "DeepLinks"}
            },
            {{Array-of SOAPObjectType}
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                {SOAPObjectType
                    element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "SearchTags"},
                    xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "ArrayOfWebSearchTag"},
                    curl-type = {Array-of WebSearchTag},
                    nillable? = true
                },
                {SOAPObjectType
                    element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "DeepLinks"},
                    xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "ArrayOfDeepLink"},
                    curl-type = {Array-of DeepLink},
                    nillable? = true
                }
            },
            {{Array-of String}
                "title",
                "description",
                "url",
                "cache-url",
                "display-url",
                "date-time",
                "search-tags",
                "deep-links"
            },
            optional-elements = 
                {{Set-of XMLName}
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Title"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Description"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Url"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "CacheUrl"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "DisplayUrl"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "DateTime"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "SearchTags"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "DeepLinks"}
              },
            element-name-to-xml-type = element-name-to-xml-type,
            xml-type-to-curl-type = xml-type-to-curl-type,
            curl-type-to-xml-type = curl-type-to-xml-type,
            xml-type-to-element-name = xml-type-to-element-name
        }
        {soap-struct-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant enum-marshaler:SOAPEnumMarshaler =
            {SOAPEnumMarshaler
                {SOAPObjectType
                    element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "WebSearchOption"},
                    xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "WebSearchOption"},
                    curl-type = WebSearchOption
                },
                value-type = 
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                use-value? = true
            }
        {enum-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant soap-struct-marshaler:SOAPStructMarshaler =
        {SOAPStructMarshaler
            {SOAPObjectType
                element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "WebSearchTag"},
                xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "WebSearchTag"},
                curl-type = WebSearchTag,
                nillable? = true
            },
            {{Array-of #XMLName}
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Name"},
                {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Value"}
            },
            {{Array-of SOAPObjectType}
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String,
                    nillable? = true
                }
            },
            {{Array-of String}
                "name",
                "value"
            },
            optional-elements = 
                {{Set-of XMLName}
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Name"},
                    {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Value"}
              },
            element-name-to-xml-type = element-name-to-xml-type,
            xml-type-to-curl-type = xml-type-to-curl-type,
            curl-type-to-xml-type = curl-type-to-xml-type,
            xml-type-to-element-name = xml-type-to-element-name
        }
        {soap-struct-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant array-marshaler:SOAPArrayMarshaler =
            {SOAPArrayMarshaler.from-element-type-array
                {{Array-of SOAPObjectType}
                    {SOAPObjectType
                        element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "DeepLink"},
                        xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "DeepLink"},
                        curl-type = DeepLink
                    },
                    {SOAPObjectType
                        element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "DeepLinks"},
                        xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "ArrayOfDeepLink"},
                        curl-type = {Array-of DeepLink},
                        nillable? = true
                    }
                },
                element-names =
                    {{Array-of #XMLName}
                        {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "DeepLink"}
                    },
                xml-type-to-curl-type = xml-type-to-curl-type,
                curl-type-to-xml-type = curl-type-to-xml-type,
                xml-type-to-element-name = xml-type-to-element-name
            }
        {array-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant array-marshaler:SOAPArrayMarshaler =
            {SOAPArrayMarshaler.from-element-type-array
                {{Array-of SOAPObjectType}
                    {SOAPObjectType
                        element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Error"},
                        xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Error"},
                        curl-type = Error
                    },
                    {SOAPObjectType
                        element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Errors"},
                        xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "ArrayOfError"},
                        curl-type = {Array-of Error},
                        nillable? = true
                    }
                },
                element-names =
                    {{Array-of #XMLName}
                        {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Error"}
                    },
                xml-type-to-curl-type = xml-type-to-curl-type,
                curl-type-to-xml-type = curl-type-to-xml-type,
                xml-type-to-element-name = xml-type-to-element-name
            }
        {array-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant array-marshaler:SOAPArrayMarshaler =
            {SOAPArrayMarshaler.from-element-type-array
                {{Array-of SOAPObjectType}
                    {SOAPObjectType
                        element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "ImageResult"},
                        xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "ImageResult"},
                        curl-type = ImageResult
                    },
                    {SOAPObjectType
                        element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Results"},
                        xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "ArrayOfImageResult"},
                        curl-type = {Array-of ImageResult},
                        nillable? = true
                    }
                },
                element-names =
                    {{Array-of #XMLName}
                        {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "ImageResult"}
                    },
                xml-type-to-curl-type = xml-type-to-curl-type,
                curl-type-to-xml-type = curl-type-to-xml-type,
                xml-type-to-element-name = xml-type-to-element-name
            }
        {array-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant array-marshaler:SOAPArrayMarshaler =
            {SOAPArrayMarshaler.from-element-type-array
                {{Array-of SOAPObjectType}
                    {SOAPObjectType
                        element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "InstantAnswerResult"},
                        xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "InstantAnswerResult"},
                        curl-type = InstantAnswerResult
                    },
                    {SOAPObjectType
                        element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Results"},
                        xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "ArrayOfInstantAnswerResult"},
                        curl-type = {Array-of InstantAnswerResult},
                        nillable? = true
                    }
                },
                element-names =
                    {{Array-of #XMLName}
                        {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "InstantAnswerResult"}
                    },
                xml-type-to-curl-type = xml-type-to-curl-type,
                curl-type-to-xml-type = curl-type-to-xml-type,
                xml-type-to-element-name = xml-type-to-element-name
            }
        {array-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant array-marshaler:SOAPArrayMarshaler =
            {SOAPArrayMarshaler.from-element-type-array
                {{Array-of SOAPObjectType}
                    {SOAPObjectType
                        element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "MobileWebResult"},
                        xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "MobileWebResult"},
                        curl-type = MobileWebResult
                    },
                    {SOAPObjectType
                        element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Results"},
                        xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "ArrayOfMobileWebResult"},
                        curl-type = {Array-of MobileWebResult},
                        nillable? = true
                    }
                },
                element-names =
                    {{Array-of #XMLName}
                        {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "MobileWebResult"}
                    },
                xml-type-to-curl-type = xml-type-to-curl-type,
                curl-type-to-xml-type = curl-type-to-xml-type,
                xml-type-to-element-name = xml-type-to-element-name
            }
        {array-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant array-marshaler:SOAPArrayMarshaler =
            {SOAPArrayMarshaler.from-element-type-array
                {{Array-of SOAPObjectType}
                    {SOAPObjectType
                        element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "MobileWebSearchOption"},
                        xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "MobileWebSearchOption"},
                        curl-type = MobileWebSearchOption
                    },
                    {SOAPObjectType
                        element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Options"},
                        xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "ArrayOfMobileWebSearchOption"},
                        curl-type = {Array-of MobileWebSearchOption},
                        nillable? = true
                    }
                },
                element-names =
                    {{Array-of #XMLName}
                        {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "MobileWebSearchOption"}
                    },
                xml-type-to-curl-type = xml-type-to-curl-type,
                curl-type-to-xml-type = curl-type-to-xml-type,
                xml-type-to-element-name = xml-type-to-element-name
            }
        {array-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant array-marshaler:SOAPArrayMarshaler =
            {SOAPArrayMarshaler.from-element-type-array
                {{Array-of SOAPObjectType}
                    {SOAPObjectType
                        element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "NewsArticle"},
                        xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "NewsArticle"},
                        curl-type = NewsArticle
                    },
                    {SOAPObjectType
                        element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "NewsArticles"},
                        xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "ArrayOfNewsArticle"},
                        curl-type = {Array-of NewsArticle},
                        nillable? = true
                    }
                },
                element-names =
                    {{Array-of #XMLName}
                        {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "NewsArticle"}
                    },
                xml-type-to-curl-type = xml-type-to-curl-type,
                curl-type-to-xml-type = curl-type-to-xml-type,
                xml-type-to-element-name = xml-type-to-element-name
            }
        {array-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant array-marshaler:SOAPArrayMarshaler =
            {SOAPArrayMarshaler.from-element-type-array
                {{Array-of SOAPObjectType}
                    {SOAPObjectType
                        element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "NewsCollection"},
                        xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "NewsCollection"},
                        curl-type = NewsCollection
                    },
                    {SOAPObjectType
                        element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "NewsCollections"},
                        xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "ArrayOfNewsCollection"},
                        curl-type = {Array-of NewsCollection},
                        nillable? = true
                    }
                },
                element-names =
                    {{Array-of #XMLName}
                        {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "NewsCollection"}
                    },
                xml-type-to-curl-type = xml-type-to-curl-type,
                curl-type-to-xml-type = curl-type-to-xml-type,
                xml-type-to-element-name = xml-type-to-element-name
            }
        {array-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant array-marshaler:SOAPArrayMarshaler =
            {SOAPArrayMarshaler.from-element-type-array
                {{Array-of SOAPObjectType}
                    {SOAPObjectType
                        element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "NewsRelatedSearch"},
                        xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "NewsRelatedSearch"},
                        curl-type = NewsRelatedSearch
                    },
                    {SOAPObjectType
                        element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "RelatedSearches"},
                        xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "ArrayOfNewsRelatedSearch"},
                        curl-type = {Array-of NewsRelatedSearch},
                        nillable? = true
                    }
                },
                element-names =
                    {{Array-of #XMLName}
                        {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "NewsRelatedSearch"}
                    },
                xml-type-to-curl-type = xml-type-to-curl-type,
                curl-type-to-xml-type = curl-type-to-xml-type,
                xml-type-to-element-name = xml-type-to-element-name
            }
        {array-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant array-marshaler:SOAPArrayMarshaler =
            {SOAPArrayMarshaler.from-element-type-array
                {{Array-of SOAPObjectType}
                    {SOAPObjectType
                        element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "NewsResult"},
                        xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "NewsResult"},
                        curl-type = NewsResult
                    },
                    {SOAPObjectType
                        element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Results"},
                        xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "ArrayOfNewsResult"},
                        curl-type = {Array-of NewsResult},
                        nillable? = true
                    }
                },
                element-names =
                    {{Array-of #XMLName}
                        {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "NewsResult"}
                    },
                xml-type-to-curl-type = xml-type-to-curl-type,
                curl-type-to-xml-type = curl-type-to-xml-type,
                xml-type-to-element-name = xml-type-to-element-name
            }
        {array-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant array-marshaler:SOAPArrayMarshaler =
            {SOAPArrayMarshaler.from-element-type-array
                {{Array-of SOAPObjectType}
                    {SOAPObjectType
                        element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "PhonebookResult"},
                        xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "PhonebookResult"},
                        curl-type = PhonebookResult
                    },
                    {SOAPObjectType
                        element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Results"},
                        xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "ArrayOfPhonebookResult"},
                        curl-type = {Array-of PhonebookResult},
                        nillable? = true
                    }
                },
                element-names =
                    {{Array-of #XMLName}
                        {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "PhonebookResult"}
                    },
                xml-type-to-curl-type = xml-type-to-curl-type,
                curl-type-to-xml-type = curl-type-to-xml-type,
                xml-type-to-element-name = xml-type-to-element-name
            }
        {array-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant array-marshaler:SOAPArrayMarshaler =
            {SOAPArrayMarshaler.from-element-type-array
                {{Array-of SOAPObjectType}
                    {SOAPObjectType
                        element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "RelatedSearchResult"},
                        xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "RelatedSearchResult"},
                        curl-type = RelatedSearchResult
                    },
                    {SOAPObjectType
                        element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Results"},
                        xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "ArrayOfRelatedSearchResult"},
                        curl-type = {Array-of RelatedSearchResult},
                        nillable? = true
                    }
                },
                element-names =
                    {{Array-of #XMLName}
                        {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "RelatedSearchResult"}
                    },
                xml-type-to-curl-type = xml-type-to-curl-type,
                curl-type-to-xml-type = curl-type-to-xml-type,
                xml-type-to-element-name = xml-type-to-element-name
            }
        {array-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant array-marshaler:SOAPArrayMarshaler =
            {SOAPArrayMarshaler.from-element-type-array
                {{Array-of SOAPObjectType}
                    {SOAPObjectType
                        element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "SearchOption"},
                        xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "SearchOption"},
                        curl-type = SearchOption
                    },
                    {SOAPObjectType
                        element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Options"},
                        xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "ArrayOfSearchOption"},
                        curl-type = {Array-of SearchOption},
                        nillable? = true
                    }
                },
                element-names =
                    {{Array-of #XMLName}
                        {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "SearchOption"}
                    },
                xml-type-to-curl-type = xml-type-to-curl-type,
                curl-type-to-xml-type = curl-type-to-xml-type,
                xml-type-to-element-name = xml-type-to-element-name
            }
        {array-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant array-marshaler:SOAPArrayMarshaler =
            {SOAPArrayMarshaler.from-element-type-array
                {{Array-of SOAPObjectType}
                    {SOAPObjectType
                        element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "SourceType"},
                        xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "SourceType"},
                        curl-type = SourceType
                    },
                    {SOAPObjectType
                        element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Sources"},
                        xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "ArrayOfSourceType"},
                        curl-type = {Array-of SourceType},
                        nillable? = true
                    }
                },
                element-names =
                    {{Array-of #XMLName}
                        {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "SourceType"}
                    },
                xml-type-to-curl-type = xml-type-to-curl-type,
                curl-type-to-xml-type = curl-type-to-xml-type,
                xml-type-to-element-name = xml-type-to-element-name
            }
        {array-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant array-marshaler:SOAPArrayMarshaler =
            {SOAPArrayMarshaler.from-element-type-array
                {{Array-of SOAPObjectType}
                    {SOAPObjectType
                        element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "SpellResult"},
                        xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "SpellResult"},
                        curl-type = SpellResult
                    },
                    {SOAPObjectType
                        element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Results"},
                        xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "ArrayOfSpellResult"},
                        curl-type = {Array-of SpellResult},
                        nillable? = true
                    }
                },
                element-names =
                    {{Array-of #XMLName}
                        {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "SpellResult"}
                    },
                xml-type-to-curl-type = xml-type-to-curl-type,
                curl-type-to-xml-type = curl-type-to-xml-type,
                xml-type-to-element-name = xml-type-to-element-name
            }
        {array-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant array-marshaler:SOAPArrayMarshaler =
            {SOAPArrayMarshaler.from-element-type-array
                {{Array-of SOAPObjectType}
                    {SOAPObjectType
                        xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                        curl-type = String
                    },
                    {SOAPObjectType
                        element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "SearchTags"},
                        xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "ArrayOfString"},
                        curl-type = {Array-of String},
                        nillable? = true
                    }
                },
                element-names =
                    {{Array-of #XMLName}
                        {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "string"}
                    },
                xml-type-to-curl-type = xml-type-to-curl-type,
                curl-type-to-xml-type = curl-type-to-xml-type,
                xml-type-to-element-name = xml-type-to-element-name
            }
        {array-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant array-marshaler:SOAPArrayMarshaler =
            {SOAPArrayMarshaler.from-element-type-array
                {{Array-of SOAPObjectType}
                    {SOAPObjectType
                        element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "TranslationResult"},
                        xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "TranslationResult"},
                        curl-type = TranslationResult
                    },
                    {SOAPObjectType
                        element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Results"},
                        xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "ArrayOfTranslationResult"},
                        curl-type = {Array-of TranslationResult},
                        nillable? = true
                    }
                },
                element-names =
                    {{Array-of #XMLName}
                        {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "TranslationResult"}
                    },
                xml-type-to-curl-type = xml-type-to-curl-type,
                curl-type-to-xml-type = curl-type-to-xml-type,
                xml-type-to-element-name = xml-type-to-element-name
            }
        {array-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant array-marshaler:SOAPArrayMarshaler =
            {SOAPArrayMarshaler.from-element-type-array
                {{Array-of SOAPObjectType}
                    {SOAPObjectType
                        element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "VideoResult"},
                        xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "VideoResult"},
                        curl-type = VideoResult
                    },
                    {SOAPObjectType
                        element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Results"},
                        xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "ArrayOfVideoResult"},
                        curl-type = {Array-of VideoResult},
                        nillable? = true
                    }
                },
                element-names =
                    {{Array-of #XMLName}
                        {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "VideoResult"}
                    },
                xml-type-to-curl-type = xml-type-to-curl-type,
                curl-type-to-xml-type = curl-type-to-xml-type,
                xml-type-to-element-name = xml-type-to-element-name
            }
        {array-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant array-marshaler:SOAPArrayMarshaler =
            {SOAPArrayMarshaler.from-element-type-array
                {{Array-of SOAPObjectType}
                    {SOAPObjectType
                        element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "WebResult"},
                        xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "WebResult"},
                        curl-type = WebResult
                    },
                    {SOAPObjectType
                        element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Results"},
                        xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "ArrayOfWebResult"},
                        curl-type = {Array-of WebResult},
                        nillable? = true
                    }
                },
                element-names =
                    {{Array-of #XMLName}
                        {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "WebResult"}
                    },
                xml-type-to-curl-type = xml-type-to-curl-type,
                curl-type-to-xml-type = curl-type-to-xml-type,
                xml-type-to-element-name = xml-type-to-element-name
            }
        {array-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant array-marshaler:SOAPArrayMarshaler =
            {SOAPArrayMarshaler.from-element-type-array
                {{Array-of SOAPObjectType}
                    {SOAPObjectType
                        element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "WebSearchOption"},
                        xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "WebSearchOption"},
                        curl-type = WebSearchOption
                    },
                    {SOAPObjectType
                        element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "Options"},
                        xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "ArrayOfWebSearchOption"},
                        curl-type = {Array-of WebSearchOption},
                        nillable? = true
                    }
                },
                element-names =
                    {{Array-of #XMLName}
                        {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "WebSearchOption"}
                    },
                xml-type-to-curl-type = xml-type-to-curl-type,
                curl-type-to-xml-type = curl-type-to-xml-type,
                xml-type-to-element-name = xml-type-to-element-name
            }
        {array-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant array-marshaler:SOAPArrayMarshaler =
            {SOAPArrayMarshaler.from-element-type-array
                {{Array-of SOAPObjectType}
                    {SOAPObjectType
                        element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "WebSearchTag"},
                        xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "WebSearchTag"},
                        curl-type = WebSearchTag
                    },
                    {SOAPObjectType
                        element-name = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "SearchTags"},
                        xml-type = {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "ArrayOfWebSearchTag"},
                        curl-type = {Array-of WebSearchTag},
                        nillable? = true
                    }
                },
                element-names =
                    {{Array-of #XMLName}
                        {XMLName "http://schemas.microsoft.com/LiveSearch/2008/03/Search", "WebSearchTag"}
                    },
                xml-type-to-curl-type = xml-type-to-curl-type,
                curl-type-to-xml-type = curl-type-to-xml-type,
                xml-type-to-element-name = xml-type-to-element-name
            }
        {array-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {return
        type-mapper,
        element-name-to-xml-type,
        xml-type-to-curl-type,
        curl-type-to-xml-type,
        xml-type-to-element-name
    }
  }

  {constructor public
    {default
        service-location:Url =
            {abs-url "http://api.search.live.net:80/soap.asmx"},
            ...
    }
    {construct-super.WSDLHTTPRPCPostClient service-location,
        generated-using-version = "6",
        {splice ...}
    }
  }
}

{define-enum public AdultOption
    off = "Off",
    moderate = "Moderate",
    strict = "Strict"
}

{define-class public open DeepLink

  field public title:#String
  field public url:#String
  {constructor public {default}
  }
  {constructor public 
    {from-keywords
      title:#String = {uninitialized-value-for-type #String},
      url:#String = {uninitialized-value-for-type #String}
    }
    {if {keyword-supplied? title} then
        set self.title = title}
    {if {keyword-supplied? url} then
        set self.url = url}
  }

}

{define-class public open Error

  field package _code:{Nullable uint32} = null
  {getter public {code}:uint32
    {return self._code.value-or-default}
  }
  {setter public {code val:uint32}:void
    set self._code = val
  }
  {getter public {code-specified?}:bool
    {return self._code.value?}
  }
  {method public {unset-code}:void
    set self._code = null
  }
  field public message:#String
  field public parameter:#String
  field public value:#String
  field public help-url:#String
  field public source-type:#String
  field package _source-type-error-code:{Nullable uint32} = null
  {getter public {source-type-error-code}:uint32
    {return self._source-type-error-code.value-or-default}
  }
  {setter public {source-type-error-code val:uint32}:void
    set self._source-type-error-code = val
  }
  {getter public {source-type-error-code-specified?}:bool
    {return self._source-type-error-code.value?}
  }
  {method public {unset-source-type-error-code}:void
    set self._source-type-error-code = null
  }
  {constructor public {default}
  }
  {constructor public 
    {from-keywords
      code:uint32 = {uninitialized-value-for-type uint32},
      message:#String = {uninitialized-value-for-type #String},
      parameter:#String = {uninitialized-value-for-type #String},
      value:#String = {uninitialized-value-for-type #String},
      help-url:#String = {uninitialized-value-for-type #String},
      source-type:#String = {uninitialized-value-for-type #String},
      source-type-error-code:uint32 = {uninitialized-value-for-type uint32}
    }
    {if {keyword-supplied? code} then
        set self.code = code}
    {if {keyword-supplied? message} then
        set self.message = message}
    {if {keyword-supplied? parameter} then
        set self.parameter = parameter}
    {if {keyword-supplied? value} then
        set self.value = value}
    {if {keyword-supplied? help-url} then
        set self.help-url = help-url}
    {if {keyword-supplied? source-type} then
        set self.source-type = source-type}
    {if {keyword-supplied? source-type-error-code} then
        set self.source-type-error-code = source-type-error-code}
  }

}

{define-class public open ImageRequest

  field package _offset:{Nullable uint32} = null
  {getter public {offset}:uint32
    {return self._offset.value-or-default}
  }
  {setter public {offset val:uint32}:void
    set self._offset = val
  }
  {getter public {offset-specified?}:bool
    {return self._offset.value?}
  }
  {method public {unset-offset}:void
    set self._offset = null
  }
  field package _count:{Nullable uint32} = null
  {getter public {count}:uint32
    {return self._count.value-or-default}
  }
  {setter public {count val:uint32}:void
    set self._count = val
  }
  {getter public {count-specified?}:bool
    {return self._count.value?}
  }
  {method public {unset-count}:void
    set self._count = null
  }
  field public filters:#{Array-of String}
  {constructor public {default}
  }
  {constructor public 
    {from-keywords
      offset:uint32 = {uninitialized-value-for-type uint32},
      count:uint32 = {uninitialized-value-for-type uint32},
      filters:#{Array-of String} = {uninitialized-value-for-type #{Array-of String}}
    }
    {if {keyword-supplied? offset} then
        set self.offset = offset}
    {if {keyword-supplied? count} then
        set self.count = count}
    {if {keyword-supplied? filters} then
        set self.filters = filters}
  }

}

{define-class public open ImageResponse

  field package _total:{Nullable uint32} = null
  {getter public {total}:uint32
    {return self._total.value-or-default}
  }
  {setter public {total val:uint32}:void
    set self._total = val
  }
  {getter public {total-specified?}:bool
    {return self._total.value?}
  }
  {method public {unset-total}:void
    set self._total = null
  }
  field package _offset:{Nullable uint32} = null
  {getter public {offset}:uint32
    {return self._offset.value-or-default}
  }
  {setter public {offset val:uint32}:void
    set self._offset = val
  }
  {getter public {offset-specified?}:bool
    {return self._offset.value?}
  }
  {method public {unset-offset}:void
    set self._offset = null
  }
  field public results:#{Array-of ImageResult}
  {constructor public {default}
  }
  {constructor public 
    {from-keywords
      total:uint32 = {uninitialized-value-for-type uint32},
      offset:uint32 = {uninitialized-value-for-type uint32},
      results:#{Array-of ImageResult} = {uninitialized-value-for-type #{Array-of ImageResult}}
    }
    {if {keyword-supplied? total} then
        set self.total = total}
    {if {keyword-supplied? offset} then
        set self.offset = offset}
    {if {keyword-supplied? results} then
        set self.results = results}
  }

}

{define-class public open ImageResult

  field public title:#String
  field public media-url:#String
  field public url:#String
  field public display-url:#String
  field package _width:{Nullable uint32} = null
  {getter public {width}:uint32
    {return self._width.value-or-default}
  }
  {setter public {width val:uint32}:void
    set self._width = val
  }
  {getter public {width-specified?}:bool
    {return self._width.value?}
  }
  {method public {unset-width}:void
    set self._width = null
  }
  field package _height:{Nullable uint32} = null
  {getter public {height}:uint32
    {return self._height.value-or-default}
  }
  {setter public {height val:uint32}:void
    set self._height = val
  }
  {getter public {height-specified?}:bool
    {return self._height.value?}
  }
  {method public {unset-height}:void
    set self._height = null
  }
  field package _file-size:{Nullable uint32} = null
  {getter public {file-size}:uint32
    {return self._file-size.value-or-default}
  }
  {setter public {file-size val:uint32}:void
    set self._file-size = val
  }
  {getter public {file-size-specified?}:bool
    {return self._file-size.value?}
  }
  {method public {unset-file-size}:void
    set self._file-size = null
  }
  field public content-type:#String
  field public thumbnail:#Thumbnail
  {constructor public {default}
  }
  {constructor public 
    {from-keywords
      title:#String = {uninitialized-value-for-type #String},
      media-url:#String = {uninitialized-value-for-type #String},
      url:#String = {uninitialized-value-for-type #String},
      display-url:#String = {uninitialized-value-for-type #String},
      width:uint32 = {uninitialized-value-for-type uint32},
      height:uint32 = {uninitialized-value-for-type uint32},
      file-size:uint32 = {uninitialized-value-for-type uint32},
      content-type:#String = {uninitialized-value-for-type #String},
      thumbnail:#Thumbnail = {uninitialized-value-for-type #Thumbnail}
    }
    {if {keyword-supplied? title} then
        set self.title = title}
    {if {keyword-supplied? media-url} then
        set self.media-url = media-url}
    {if {keyword-supplied? url} then
        set self.url = url}
    {if {keyword-supplied? display-url} then
        set self.display-url = display-url}
    {if {keyword-supplied? width} then
        set self.width = width}
    {if {keyword-supplied? height} then
        set self.height = height}
    {if {keyword-supplied? file-size} then
        set self.file-size = file-size}
    {if {keyword-supplied? content-type} then
        set self.content-type = content-type}
    {if {keyword-supplied? thumbnail} then
        set self.thumbnail = thumbnail}
  }

}

{define-class public open InstantAnswerResponse

  field public results:#{Array-of InstantAnswerResult}
  {constructor public {default}
  }
  {constructor public 
    {from-keywords
      results:#{Array-of InstantAnswerResult} = {uninitialized-value-for-type #{Array-of InstantAnswerResult}}
    }
    {if {keyword-supplied? results} then
        set self.results = results}
  }

}

{define-class public open InstantAnswerResult

  field public content-type:#String
  field public title:#String
  field public click-through-url:#String
  field public url:#String
  field public attribution:#String
  field public instant-answer-specific-data:#String
  {constructor public {default}
  }
  {constructor public 
    {from-keywords
      content-type:#String = {uninitialized-value-for-type #String},
      title:#String = {uninitialized-value-for-type #String},
      click-through-url:#String = {uninitialized-value-for-type #String},
      url:#String = {uninitialized-value-for-type #String},
      attribution:#String = {uninitialized-value-for-type #String},
      instant-answer-specific-data:#String = {uninitialized-value-for-type #String}
    }
    {if {keyword-supplied? content-type} then
        set self.content-type = content-type}
    {if {keyword-supplied? title} then
        set self.title = title}
    {if {keyword-supplied? click-through-url} then
        set self.click-through-url = click-through-url}
    {if {keyword-supplied? url} then
        set self.url = url}
    {if {keyword-supplied? attribution} then
        set self.attribution = attribution}
    {if {keyword-supplied? instant-answer-specific-data} then
        set self.instant-answer-specific-data = instant-answer-specific-data}
  }

}

{define-class public open MobileWebRequest

  field package _offset:{Nullable uint32} = null
  {getter public {offset}:uint32
    {return self._offset.value-or-default}
  }
  {setter public {offset val:uint32}:void
    set self._offset = val
  }
  {getter public {offset-specified?}:bool
    {return self._offset.value?}
  }
  {method public {unset-offset}:void
    set self._offset = null
  }
  field package _count:{Nullable uint32} = null
  {getter public {count}:uint32
    {return self._count.value-or-default}
  }
  {setter public {count val:uint32}:void
    set self._count = val
  }
  {getter public {count-specified?}:bool
    {return self._count.value?}
  }
  {method public {unset-count}:void
    set self._count = null
  }
  field public options:#{Array-of MobileWebSearchOption}
  {constructor public {default}
  }
  {constructor public 
    {from-keywords
      offset:uint32 = {uninitialized-value-for-type uint32},
      count:uint32 = {uninitialized-value-for-type uint32},
      options:#{Array-of MobileWebSearchOption} = {uninitialized-value-for-type #{Array-of MobileWebSearchOption}}
    }
    {if {keyword-supplied? offset} then
        set self.offset = offset}
    {if {keyword-supplied? count} then
        set self.count = count}
    {if {keyword-supplied? options} then
        set self.options = options}
  }

}

{define-class public open MobileWebResponse

  field package _total:{Nullable uint32} = null
  {getter public {total}:uint32
    {return self._total.value-or-default}
  }
  {setter public {total val:uint32}:void
    set self._total = val
  }
  {getter public {total-specified?}:bool
    {return self._total.value?}
  }
  {method public {unset-total}:void
    set self._total = null
  }
  field package _offset:{Nullable uint32} = null
  {getter public {offset}:uint32
    {return self._offset.value-or-default}
  }
  {setter public {offset val:uint32}:void
    set self._offset = val
  }
  {getter public {offset-specified?}:bool
    {return self._offset.value?}
  }
  {method public {unset-offset}:void
    set self._offset = null
  }
  field public results:#{Array-of MobileWebResult}
  {constructor public {default}
  }
  {constructor public 
    {from-keywords
      total:uint32 = {uninitialized-value-for-type uint32},
      offset:uint32 = {uninitialized-value-for-type uint32},
      results:#{Array-of MobileWebResult} = {uninitialized-value-for-type #{Array-of MobileWebResult}}
    }
    {if {keyword-supplied? total} then
        set self.total = total}
    {if {keyword-supplied? offset} then
        set self.offset = offset}
    {if {keyword-supplied? results} then
        set self.results = results}
  }

}

{define-class public open MobileWebResult

  field public title:#String
  field public description:#String
  field public url:#String
  field public display-url:#String
  field public date-time:#String
  {constructor public {default}
  }
  {constructor public 
    {from-keywords
      title:#String = {uninitialized-value-for-type #String},
      description:#String = {uninitialized-value-for-type #String},
      url:#String = {uninitialized-value-for-type #String},
      display-url:#String = {uninitialized-value-for-type #String},
      date-time:#String = {uninitialized-value-for-type #String}
    }
    {if {keyword-supplied? title} then
        set self.title = title}
    {if {keyword-supplied? description} then
        set self.description = description}
    {if {keyword-supplied? url} then
        set self.url = url}
    {if {keyword-supplied? display-url} then
        set self.display-url = display-url}
    {if {keyword-supplied? date-time} then
        set self.date-time = date-time}
  }

}

{define-enum public MobileWebSearchOption
    disable-host-collapsing = "DisableHostCollapsing",
    disable-query-alterations = "DisableQueryAlterations"
}

{define-class public open NewsArticle

  field public title:#String
  field public url:#String
  field public source:#String
  field public snippet:#String
  field public date:#String
  {constructor public {default}
  }
  {constructor public 
    {from-keywords
      title:#String = {uninitialized-value-for-type #String},
      url:#String = {uninitialized-value-for-type #String},
      source:#String = {uninitialized-value-for-type #String},
      snippet:#String = {uninitialized-value-for-type #String},
      date:#String = {uninitialized-value-for-type #String}
    }
    {if {keyword-supplied? title} then
        set self.title = title}
    {if {keyword-supplied? url} then
        set self.url = url}
    {if {keyword-supplied? source} then
        set self.source = source}
    {if {keyword-supplied? snippet} then
        set self.snippet = snippet}
    {if {keyword-supplied? date} then
        set self.date = date}
  }

}

{define-class public open NewsCollection

  field public name:#String
  field public news-articles:#{Array-of NewsArticle}
  {constructor public {default}
  }
  {constructor public 
    {from-keywords
      name:#String = {uninitialized-value-for-type #String},
      news-articles:#{Array-of NewsArticle} = {uninitialized-value-for-type #{Array-of NewsArticle}}
    }
    {if {keyword-supplied? name} then
        set self.name = name}
    {if {keyword-supplied? news-articles} then
        set self.news-articles = news-articles}
  }

}

{define-class public open NewsRelatedSearch

  field public title:#String
  field public url:#String
  {constructor public {default}
  }
  {constructor public 
    {from-keywords
      title:#String = {uninitialized-value-for-type #String},
      url:#String = {uninitialized-value-for-type #String}
    }
    {if {keyword-supplied? title} then
        set self.title = title}
    {if {keyword-supplied? url} then
        set self.url = url}
  }

}

{define-class public open NewsRequest

  field package _offset:{Nullable uint32} = null
  {getter public {offset}:uint32
    {return self._offset.value-or-default}
  }
  {setter public {offset val:uint32}:void
    set self._offset = val
  }
  {getter public {offset-specified?}:bool
    {return self._offset.value?}
  }
  {method public {unset-offset}:void
    set self._offset = null
  }
  field package _count:{Nullable uint32} = null
  {getter public {count}:uint32
    {return self._count.value-or-default}
  }
  {setter public {count val:uint32}:void
    set self._count = val
  }
  {getter public {count-specified?}:bool
    {return self._count.value?}
  }
  {method public {unset-count}:void
    set self._count = null
  }
  field public location-override:#String
  field public category:#String
  field package _sort-by:{Nullable NewsSortOption} = null
  {getter public {sort-by}:NewsSortOption
    {return self._sort-by.value-or-default}
  }
  {setter public {sort-by val:NewsSortOption}:void
    set self._sort-by = val
  }
  {getter public {sort-by-specified?}:bool
    {return self._sort-by.value?}
  }
  {method public {unset-sort-by}:void
    set self._sort-by = null
  }
  {constructor public {default}
  }
  {constructor public 
    {from-keywords
      offset:uint32 = {uninitialized-value-for-type uint32},
      count:uint32 = {uninitialized-value-for-type uint32},
      location-override:#String = {uninitialized-value-for-type #String},
      category:#String = {uninitialized-value-for-type #String},
      sort-by:NewsSortOption = {uninitialized-value-for-type NewsSortOption}
    }
    {if {keyword-supplied? offset} then
        set self.offset = offset}
    {if {keyword-supplied? count} then
        set self.count = count}
    {if {keyword-supplied? location-override} then
        set self.location-override = location-override}
    {if {keyword-supplied? category} then
        set self.category = category}
    {if {keyword-supplied? sort-by} then
        set self.sort-by = sort-by}
  }

}

{define-class public open NewsResponse

  field package _total:{Nullable uint32} = null
  {getter public {total}:uint32
    {return self._total.value-or-default}
  }
  {setter public {total val:uint32}:void
    set self._total = val
  }
  {getter public {total-specified?}:bool
    {return self._total.value?}
  }
  {method public {unset-total}:void
    set self._total = null
  }
  field package _offset:{Nullable uint32} = null
  {getter public {offset}:uint32
    {return self._offset.value-or-default}
  }
  {setter public {offset val:uint32}:void
    set self._offset = val
  }
  {getter public {offset-specified?}:bool
    {return self._offset.value?}
  }
  {method public {unset-offset}:void
    set self._offset = null
  }
  field public related-searches:#{Array-of NewsRelatedSearch}
  field public results:#{Array-of NewsResult}
  {constructor public {default}
  }
  {constructor public 
    {from-keywords
      total:uint32 = {uninitialized-value-for-type uint32},
      offset:uint32 = {uninitialized-value-for-type uint32},
      related-searches:#{Array-of NewsRelatedSearch} = {uninitialized-value-for-type #{Array-of NewsRelatedSearch}},
      results:#{Array-of NewsResult} = {uninitialized-value-for-type #{Array-of NewsResult}}
    }
    {if {keyword-supplied? total} then
        set self.total = total}
    {if {keyword-supplied? offset} then
        set self.offset = offset}
    {if {keyword-supplied? related-searches} then
        set self.related-searches = related-searches}
    {if {keyword-supplied? results} then
        set self.results = results}
  }

}

{define-class public open NewsResult

  field public title:#String
  field public url:#String
  field public source:#String
  field public snippet:#String
  field public date:#String
  field package _breaking-news:{Nullable uint32} = null
  {getter public {breaking-news}:uint32
    {return self._breaking-news.value-or-default}
  }
  {setter public {breaking-news val:uint32}:void
    set self._breaking-news = val
  }
  {getter public {breaking-news-specified?}:bool
    {return self._breaking-news.value?}
  }
  {method public {unset-breaking-news}:void
    set self._breaking-news = null
  }
  field public news-collections:#{Array-of NewsCollection}
  {constructor public {default}
  }
  {constructor public 
    {from-keywords
      title:#String = {uninitialized-value-for-type #String},
      url:#String = {uninitialized-value-for-type #String},
      source:#String = {uninitialized-value-for-type #String},
      snippet:#String = {uninitialized-value-for-type #String},
      date:#String = {uninitialized-value-for-type #String},
      breaking-news:uint32 = {uninitialized-value-for-type uint32},
      news-collections:#{Array-of NewsCollection} = {uninitialized-value-for-type #{Array-of NewsCollection}}
    }
    {if {keyword-supplied? title} then
        set self.title = title}
    {if {keyword-supplied? url} then
        set self.url = url}
    {if {keyword-supplied? source} then
        set self.source = source}
    {if {keyword-supplied? snippet} then
        set self.snippet = snippet}
    {if {keyword-supplied? date} then
        set self.date = date}
    {if {keyword-supplied? breaking-news} then
        set self.breaking-news = breaking-news}
    {if {keyword-supplied? news-collections} then
        set self.news-collections = news-collections}
  }

}

{define-enum public NewsSortOption
    relevance = "Relevance",
    date = "Date"
}

{define-class public open PhonebookRequest

  field package _offset:{Nullable uint32} = null
  {getter public {offset}:uint32
    {return self._offset.value-or-default}
  }
  {setter public {offset val:uint32}:void
    set self._offset = val
  }
  {getter public {offset-specified?}:bool
    {return self._offset.value?}
  }
  {method public {unset-offset}:void
    set self._offset = null
  }
  field package _count:{Nullable uint32} = null
  {getter public {count}:uint32
    {return self._count.value-or-default}
  }
  {setter public {count val:uint32}:void
    set self._count = val
  }
  {getter public {count-specified?}:bool
    {return self._count.value?}
  }
  {method public {unset-count}:void
    set self._count = null
  }
  field public file-type:#String
  field package _sort-by:{Nullable PhonebookSortOption} = null
  {getter public {sort-by}:PhonebookSortOption
    {return self._sort-by.value-or-default}
  }
  {setter public {sort-by val:PhonebookSortOption}:void
    set self._sort-by = val
  }
  {getter public {sort-by-specified?}:bool
    {return self._sort-by.value?}
  }
  {method public {unset-sort-by}:void
    set self._sort-by = null
  }
  field public loc-id:#String
  field public category:#String
  {constructor public {default}
  }
  {constructor public 
    {from-keywords
      offset:uint32 = {uninitialized-value-for-type uint32},
      count:uint32 = {uninitialized-value-for-type uint32},
      file-type:#String = {uninitialized-value-for-type #String},
      sort-by:PhonebookSortOption = {uninitialized-value-for-type PhonebookSortOption},
      loc-id:#String = {uninitialized-value-for-type #String},
      category:#String = {uninitialized-value-for-type #String}
    }
    {if {keyword-supplied? offset} then
        set self.offset = offset}
    {if {keyword-supplied? count} then
        set self.count = count}
    {if {keyword-supplied? file-type} then
        set self.file-type = file-type}
    {if {keyword-supplied? sort-by} then
        set self.sort-by = sort-by}
    {if {keyword-supplied? loc-id} then
        set self.loc-id = loc-id}
    {if {keyword-supplied? category} then
        set self.category = category}
  }

}

{define-class public open PhonebookResponse

  field package _total:{Nullable uint32} = null
  {getter public {total}:uint32
    {return self._total.value-or-default}
  }
  {setter public {total val:uint32}:void
    set self._total = val
  }
  {getter public {total-specified?}:bool
    {return self._total.value?}
  }
  {method public {unset-total}:void
    set self._total = null
  }
  field package _offset:{Nullable uint32} = null
  {getter public {offset}:uint32
    {return self._offset.value-or-default}
  }
  {setter public {offset val:uint32}:void
    set self._offset = val
  }
  {getter public {offset-specified?}:bool
    {return self._offset.value?}
  }
  {method public {unset-offset}:void
    set self._offset = null
  }
  field public local-serp-url:#String
  field public title:#String
  field public results:#{Array-of PhonebookResult}
  {constructor public {default}
  }
  {constructor public 
    {from-keywords
      total:uint32 = {uninitialized-value-for-type uint32},
      offset:uint32 = {uninitialized-value-for-type uint32},
      local-serp-url:#String = {uninitialized-value-for-type #String},
      title:#String = {uninitialized-value-for-type #String},
      results:#{Array-of PhonebookResult} = {uninitialized-value-for-type #{Array-of PhonebookResult}}
    }
    {if {keyword-supplied? total} then
        set self.total = total}
    {if {keyword-supplied? offset} then
        set self.offset = offset}
    {if {keyword-supplied? local-serp-url} then
        set self.local-serp-url = local-serp-url}
    {if {keyword-supplied? title} then
        set self.title = title}
    {if {keyword-supplied? results} then
        set self.results = results}
  }

}

{define-class public open PhonebookResult

  field public title:#String
  field public url:#String
  field public business:#String
  field public phone-number:#String
  field public address:#String
  field public city:#String
  field public state-or-province:#String
  field public country-or-region:#String
  field public postal-code:#String
  field package _latitude:{Nullable double} = null
  {getter public {latitude}:double
    {return self._latitude.value-or-default}
  }
  {setter public {latitude val:double}:void
    set self._latitude = val
  }
  {getter public {latitude-specified?}:bool
    {return self._latitude.value?}
  }
  {method public {unset-latitude}:void
    set self._latitude = null
  }
  field package _longitude:{Nullable double} = null
  {getter public {longitude}:double
    {return self._longitude.value-or-default}
  }
  {setter public {longitude val:double}:void
    set self._longitude = val
  }
  {getter public {longitude-specified?}:bool
    {return self._longitude.value?}
  }
  {method public {unset-longitude}:void
    set self._longitude = null
  }
  field public unique-id:#String
  field public business-url:#String
  field package _user-rating:{Nullable double} = null
  {getter public {user-rating}:double
    {return self._user-rating.value-or-default}
  }
  {setter public {user-rating val:double}:void
    set self._user-rating = val
  }
  {getter public {user-rating-specified?}:bool
    {return self._user-rating.value?}
  }
  {method public {unset-user-rating}:void
    set self._user-rating = null
  }
  field package _review-count:{Nullable uint32} = null
  {getter public {review-count}:uint32
    {return self._review-count.value-or-default}
  }
  {setter public {review-count val:uint32}:void
    set self._review-count = val
  }
  {getter public {review-count-specified?}:bool
    {return self._review-count.value?}
  }
  {method public {unset-review-count}:void
    set self._review-count = null
  }
  field public display-url:#String
  {constructor public {default}
  }
  {constructor public 
    {from-keywords
      title:#String = {uninitialized-value-for-type #String},
      url:#String = {uninitialized-value-for-type #String},
      business:#String = {uninitialized-value-for-type #String},
      phone-number:#String = {uninitialized-value-for-type #String},
      address:#String = {uninitialized-value-for-type #String},
      city:#String = {uninitialized-value-for-type #String},
      state-or-province:#String = {uninitialized-value-for-type #String},
      country-or-region:#String = {uninitialized-value-for-type #String},
      postal-code:#String = {uninitialized-value-for-type #String},
      latitude:double = {uninitialized-value-for-type double},
      longitude:double = {uninitialized-value-for-type double},
      unique-id:#String = {uninitialized-value-for-type #String},
      business-url:#String = {uninitialized-value-for-type #String},
      user-rating:double = {uninitialized-value-for-type double},
      review-count:uint32 = {uninitialized-value-for-type uint32},
      display-url:#String = {uninitialized-value-for-type #String}
    }
    {if {keyword-supplied? title} then
        set self.title = title}
    {if {keyword-supplied? url} then
        set self.url = url}
    {if {keyword-supplied? business} then
        set self.business = business}
    {if {keyword-supplied? phone-number} then
        set self.phone-number = phone-number}
    {if {keyword-supplied? address} then
        set self.address = address}
    {if {keyword-supplied? city} then
        set self.city = city}
    {if {keyword-supplied? state-or-province} then
        set self.state-or-province = state-or-province}
    {if {keyword-supplied? country-or-region} then
        set self.country-or-region = country-or-region}
    {if {keyword-supplied? postal-code} then
        set self.postal-code = postal-code}
    {if {keyword-supplied? latitude} then
        set self.latitude = latitude}
    {if {keyword-supplied? longitude} then
        set self.longitude = longitude}
    {if {keyword-supplied? unique-id} then
        set self.unique-id = unique-id}
    {if {keyword-supplied? business-url} then
        set self.business-url = business-url}
    {if {keyword-supplied? user-rating} then
        set self.user-rating = user-rating}
    {if {keyword-supplied? review-count} then
        set self.review-count = review-count}
    {if {keyword-supplied? display-url} then
        set self.display-url = display-url}
  }

}

{define-enum public PhonebookSortOption
    default = "Default",
    relevance = "Relevance",
    distance = "Distance"
}

{define-class public open Query

  field public search-terms:#String
  field public altered-query:#String
  field public alteration-override-query:#String
  {constructor public {default}
  }
  {constructor public 
    {from-keywords
      search-terms:#String = {uninitialized-value-for-type #String},
      altered-query:#String = {uninitialized-value-for-type #String},
      alteration-override-query:#String = {uninitialized-value-for-type #String}
    }
    {if {keyword-supplied? search-terms} then
        set self.search-terms = search-terms}
    {if {keyword-supplied? altered-query} then
        set self.altered-query = altered-query}
    {if {keyword-supplied? alteration-override-query} then
        set self.alteration-override-query = alteration-override-query}
  }

}

{define-class public open RelatedSearchResponse

  field public results:#{Array-of RelatedSearchResult}
  {constructor public {default}
  }
  {constructor public 
    {from-keywords
      results:#{Array-of RelatedSearchResult} = {uninitialized-value-for-type #{Array-of RelatedSearchResult}}
    }
    {if {keyword-supplied? results} then
        set self.results = results}
  }

}

{define-class public open RelatedSearchResult

  field public title:#String
  field public url:#String
  {constructor public {default}
  }
  {constructor public 
    {from-keywords
      title:#String = {uninitialized-value-for-type #String},
      url:#String = {uninitialized-value-for-type #String}
    }
    {if {keyword-supplied? title} then
        set self.title = title}
    {if {keyword-supplied? url} then
        set self.url = url}
  }

}

{define-enum public SearchOption
    disable-location-detection = "DisableLocationDetection",
    enable-highlighting = "EnableHighlighting"
}

{define-class public open SearchRequest

  field public version:#String
  field public market:#String
  field public uilanguage:#String
  field public query:String = ""
  field public app-id:String = ""
  field package _adult:{Nullable AdultOption} = null
  {getter public {adult}:AdultOption
    {return self._adult.value-or-default}
  }
  {setter public {adult val:AdultOption}:void
    set self._adult = val
  }
  {getter public {adult-specified?}:bool
    {return self._adult.value?}
  }
  {method public {unset-adult}:void
    set self._adult = null
  }
  field package _latitude:{Nullable double} = null
  {getter public {latitude}:double
    {return self._latitude.value-or-default}
  }
  {setter public {latitude val:double}:void
    set self._latitude = val
  }
  {getter public {latitude-specified?}:bool
    {return self._latitude.value?}
  }
  {method public {unset-latitude}:void
    set self._latitude = null
  }
  field package _longitude:{Nullable double} = null
  {getter public {longitude}:double
    {return self._longitude.value-or-default}
  }
  {setter public {longitude val:double}:void
    set self._longitude = val
  }
  {getter public {longitude-specified?}:bool
    {return self._longitude.value?}
  }
  {method public {unset-longitude}:void
    set self._longitude = null
  }
  field package _radius:{Nullable double} = null
  {getter public {radius}:double
    {return self._radius.value-or-default}
  }
  {setter public {radius val:double}:void
    set self._radius = val
  }
  {getter public {radius-specified?}:bool
    {return self._radius.value?}
  }
  {method public {unset-radius}:void
    set self._radius = null
  }
  field public options:#{Array-of SearchOption}
  field public sources:{Array-of SourceType} = {uninitialized-value-for-type {Array-of SourceType}}
  field public web:#WebRequest
  field public image:#ImageRequest
  field public phonebook:#PhonebookRequest
  field public video:#VideoRequest
  field public news:#NewsRequest
  field public mobile-web:#MobileWebRequest
  field public translation:#TranslationRequest
  {constructor public {default}
  }
  {constructor public 
    {from-keywords
      version:#String = {uninitialized-value-for-type #String},
      market:#String = {uninitialized-value-for-type #String},
      uilanguage:#String = {uninitialized-value-for-type #String},
      query:String = {required-keyword "SearchRequest.query"} asa String,
      app-id:String = {required-keyword "SearchRequest.app-id"} asa String,
      adult:AdultOption = {uninitialized-value-for-type AdultOption},
      latitude:double = {uninitialized-value-for-type double},
      longitude:double = {uninitialized-value-for-type double},
      radius:double = {uninitialized-value-for-type double},
      options:#{Array-of SearchOption} = {uninitialized-value-for-type #{Array-of SearchOption}},
      sources:{Array-of SourceType} = {required-keyword "SearchRequest.sources"} asa {Array-of SourceType},
      web:#WebRequest = {uninitialized-value-for-type #WebRequest},
      image:#ImageRequest = {uninitialized-value-for-type #ImageRequest},
      phonebook:#PhonebookRequest = {uninitialized-value-for-type #PhonebookRequest},
      video:#VideoRequest = {uninitialized-value-for-type #VideoRequest},
      news:#NewsRequest = {uninitialized-value-for-type #NewsRequest},
      mobile-web:#MobileWebRequest = {uninitialized-value-for-type #MobileWebRequest},
      translation:#TranslationRequest = {uninitialized-value-for-type #TranslationRequest}
    }
    {if {keyword-supplied? version} then
        set self.version = version}
    {if {keyword-supplied? market} then
        set self.market = market}
    {if {keyword-supplied? uilanguage} then
        set self.uilanguage = uilanguage}
    {if {keyword-supplied? query} then
        set self.query = query}
    {if {keyword-supplied? app-id} then
        set self.app-id = app-id}
    {if {keyword-supplied? adult} then
        set self.adult = adult}
    {if {keyword-supplied? latitude} then
        set self.latitude = latitude}
    {if {keyword-supplied? longitude} then
        set self.longitude = longitude}
    {if {keyword-supplied? radius} then
        set self.radius = radius}
    {if {keyword-supplied? options} then
        set self.options = options}
    {if {keyword-supplied? sources} then
        set self.sources = sources}
    {if {keyword-supplied? web} then
        set self.web = web}
    {if {keyword-supplied? image} then
        set self.image = image}
    {if {keyword-supplied? phonebook} then
        set self.phonebook = phonebook}
    {if {keyword-supplied? video} then
        set self.video = video}
    {if {keyword-supplied? news} then
        set self.news = news}
    {if {keyword-supplied? mobile-web} then
        set self.mobile-web = mobile-web}
    {if {keyword-supplied? translation} then
        set self.translation = translation}
  }

}

{define-class public open SearchResponse

  field public version:String = ""
  field public query:#Query
  field public spell:#SpellResponse
  field public web:#WebResponse
  field public image:#ImageResponse
  field public related-search:#RelatedSearchResponse
  field public phonebook:#PhonebookResponse
  field public video:#VideoResponse
  field public instant-answer:#InstantAnswerResponse
  field public news:#NewsResponse
  field public mobile-web:#MobileWebResponse
  field public translation:#TranslationResponse
  field public errors:#{Array-of Error}
  {constructor public {default}
  }
  {constructor public 
    {from-keywords
      version:String = {required-keyword "SearchResponse.version"} asa String,
      query:#Query = {uninitialized-value-for-type #Query},
      spell:#SpellResponse = {uninitialized-value-for-type #SpellResponse},
      web:#WebResponse = {uninitialized-value-for-type #WebResponse},
      image:#ImageResponse = {uninitialized-value-for-type #ImageResponse},
      related-search:#RelatedSearchResponse = {uninitialized-value-for-type #RelatedSearchResponse},
      phonebook:#PhonebookResponse = {uninitialized-value-for-type #PhonebookResponse},
      video:#VideoResponse = {uninitialized-value-for-type #VideoResponse},
      instant-answer:#InstantAnswerResponse = {uninitialized-value-for-type #InstantAnswerResponse},
      news:#NewsResponse = {uninitialized-value-for-type #NewsResponse},
      mobile-web:#MobileWebResponse = {uninitialized-value-for-type #MobileWebResponse},
      translation:#TranslationResponse = {uninitialized-value-for-type #TranslationResponse},
      errors:#{Array-of Error} = {uninitialized-value-for-type #{Array-of Error}}
    }
    {if {keyword-supplied? version} then
        set self.version = version}
    {if {keyword-supplied? query} then
        set self.query = query}
    {if {keyword-supplied? spell} then
        set self.spell = spell}
    {if {keyword-supplied? web} then
        set self.web = web}
    {if {keyword-supplied? image} then
        set self.image = image}
    {if {keyword-supplied? related-search} then
        set self.related-search = related-search}
    {if {keyword-supplied? phonebook} then
        set self.phonebook = phonebook}
    {if {keyword-supplied? video} then
        set self.video = video}
    {if {keyword-supplied? instant-answer} then
        set self.instant-answer = instant-answer}
    {if {keyword-supplied? news} then
        set self.news = news}
    {if {keyword-supplied? mobile-web} then
        set self.mobile-web = mobile-web}
    {if {keyword-supplied? translation} then
        set self.translation = translation}
    {if {keyword-supplied? errors} then
        set self.errors = errors}
  }

}

{define-enum public SourceType
    spell = "Spell",
    web = "Web",
    image = "Image",
    related-search = "RelatedSearch",
    phonebook = "Phonebook",
    showtimes = "Showtimes",
    weather = "Weather",
    video = "Video",
    ad = "Ad",
    xrank = "XRank",
    instant-answer = "InstantAnswer",
    news = "News",
    query-location = "QueryLocation",
    mobile-web = "MobileWeb",
    translation = "Translation"
}

{define-class public open SpellResponse

  field package _total:{Nullable uint32} = null
  {getter public {total}:uint32
    {return self._total.value-or-default}
  }
  {setter public {total val:uint32}:void
    set self._total = val
  }
  {getter public {total-specified?}:bool
    {return self._total.value?}
  }
  {method public {unset-total}:void
    set self._total = null
  }
  field public results:#{Array-of SpellResult}
  {constructor public {default}
  }
  {constructor public 
    {from-keywords
      total:uint32 = {uninitialized-value-for-type uint32},
      results:#{Array-of SpellResult} = {uninitialized-value-for-type #{Array-of SpellResult}}
    }
    {if {keyword-supplied? total} then
        set self.total = total}
    {if {keyword-supplied? results} then
        set self.results = results}
  }

}

{define-class public open SpellResult

  field public value:#String
  {constructor public {default}
  }
  {constructor public 
    {from-keywords
      value:#String = {uninitialized-value-for-type #String}
    }
    {if {keyword-supplied? value} then
        set self.value = value}
  }

}

{define-class public open Thumbnail

  field public url:#String
  field public content-type:#String
  field package _width:{Nullable uint32} = null
  {getter public {width}:uint32
    {return self._width.value-or-default}
  }
  {setter public {width val:uint32}:void
    set self._width = val
  }
  {getter public {width-specified?}:bool
    {return self._width.value?}
  }
  {method public {unset-width}:void
    set self._width = null
  }
  field package _height:{Nullable uint32} = null
  {getter public {height}:uint32
    {return self._height.value-or-default}
  }
  {setter public {height val:uint32}:void
    set self._height = val
  }
  {getter public {height-specified?}:bool
    {return self._height.value?}
  }
  {method public {unset-height}:void
    set self._height = null
  }
  field package _file-size:{Nullable uint32} = null
  {getter public {file-size}:uint32
    {return self._file-size.value-or-default}
  }
  {setter public {file-size val:uint32}:void
    set self._file-size = val
  }
  {getter public {file-size-specified?}:bool
    {return self._file-size.value?}
  }
  {method public {unset-file-size}:void
    set self._file-size = null
  }
  field package _run-time:{Nullable uint32} = null
  {getter public {run-time}:uint32
    {return self._run-time.value-or-default}
  }
  {setter public {run-time val:uint32}:void
    set self._run-time = val
  }
  {getter public {run-time-specified?}:bool
    {return self._run-time.value?}
  }
  {method public {unset-run-time}:void
    set self._run-time = null
  }
  {constructor public {default}
  }
  {constructor public 
    {from-keywords
      url:#String = {uninitialized-value-for-type #String},
      content-type:#String = {uninitialized-value-for-type #String},
      width:uint32 = {uninitialized-value-for-type uint32},
      height:uint32 = {uninitialized-value-for-type uint32},
      file-size:uint32 = {uninitialized-value-for-type uint32},
      run-time:uint32 = {uninitialized-value-for-type uint32}
    }
    {if {keyword-supplied? url} then
        set self.url = url}
    {if {keyword-supplied? content-type} then
        set self.content-type = content-type}
    {if {keyword-supplied? width} then
        set self.width = width}
    {if {keyword-supplied? height} then
        set self.height = height}
    {if {keyword-supplied? file-size} then
        set self.file-size = file-size}
    {if {keyword-supplied? run-time} then
        set self.run-time = run-time}
  }

}

{define-class public open TranslationRequest

  field public source-language:String = ""
  field public target-language:String = ""
  {constructor public {default}
  }
  {constructor public 
    {from-keywords
      source-language:String = {required-keyword "TranslationRequest.source-language"} asa String,
      target-language:String = {required-keyword "TranslationRequest.target-language"} asa String
    }
    {if {keyword-supplied? source-language} then
        set self.source-language = source-language}
    {if {keyword-supplied? target-language} then
        set self.target-language = target-language}
  }

}

{define-class public open TranslationResponse

  field public results:#{Array-of TranslationResult}
  {constructor public {default}
  }
  {constructor public 
    {from-keywords
      results:#{Array-of TranslationResult} = {uninitialized-value-for-type #{Array-of TranslationResult}}
    }
    {if {keyword-supplied? results} then
        set self.results = results}
  }

}

{define-class public open TranslationResult

  field public translated-term:#String
  {constructor public {default}
  }
  {constructor public 
    {from-keywords
      translated-term:#String = {uninitialized-value-for-type #String}
    }
    {if {keyword-supplied? translated-term} then
        set self.translated-term = translated-term}
  }

}

{define-class public open VideoRequest

  field package _offset:{Nullable uint32} = null
  {getter public {offset}:uint32
    {return self._offset.value-or-default}
  }
  {setter public {offset val:uint32}:void
    set self._offset = val
  }
  {getter public {offset-specified?}:bool
    {return self._offset.value?}
  }
  {method public {unset-offset}:void
    set self._offset = null
  }
  field package _count:{Nullable uint32} = null
  {getter public {count}:uint32
    {return self._count.value-or-default}
  }
  {setter public {count val:uint32}:void
    set self._count = val
  }
  {getter public {count-specified?}:bool
    {return self._count.value?}
  }
  {method public {unset-count}:void
    set self._count = null
  }
  field public filters:#{Array-of String}
  field package _sort-by:{Nullable VideoSortOption} = null
  {getter public {sort-by}:VideoSortOption
    {return self._sort-by.value-or-default}
  }
  {setter public {sort-by val:VideoSortOption}:void
    set self._sort-by = val
  }
  {getter public {sort-by-specified?}:bool
    {return self._sort-by.value?}
  }
  {method public {unset-sort-by}:void
    set self._sort-by = null
  }
  {constructor public {default}
  }
  {constructor public 
    {from-keywords
      offset:uint32 = {uninitialized-value-for-type uint32},
      count:uint32 = {uninitialized-value-for-type uint32},
      filters:#{Array-of String} = {uninitialized-value-for-type #{Array-of String}},
      sort-by:VideoSortOption = {uninitialized-value-for-type VideoSortOption}
    }
    {if {keyword-supplied? offset} then
        set self.offset = offset}
    {if {keyword-supplied? count} then
        set self.count = count}
    {if {keyword-supplied? filters} then
        set self.filters = filters}
    {if {keyword-supplied? sort-by} then
        set self.sort-by = sort-by}
  }

}

{define-class public open VideoResponse

  field package _total:{Nullable uint32} = null
  {getter public {total}:uint32
    {return self._total.value-or-default}
  }
  {setter public {total val:uint32}:void
    set self._total = val
  }
  {getter public {total-specified?}:bool
    {return self._total.value?}
  }
  {method public {unset-total}:void
    set self._total = null
  }
  field package _offset:{Nullable uint32} = null
  {getter public {offset}:uint32
    {return self._offset.value-or-default}
  }
  {setter public {offset val:uint32}:void
    set self._offset = val
  }
  {getter public {offset-specified?}:bool
    {return self._offset.value?}
  }
  {method public {unset-offset}:void
    set self._offset = null
  }
  field public results:#{Array-of VideoResult}
  {constructor public {default}
  }
  {constructor public 
    {from-keywords
      total:uint32 = {uninitialized-value-for-type uint32},
      offset:uint32 = {uninitialized-value-for-type uint32},
      results:#{Array-of VideoResult} = {uninitialized-value-for-type #{Array-of VideoResult}}
    }
    {if {keyword-supplied? total} then
        set self.total = total}
    {if {keyword-supplied? offset} then
        set self.offset = offset}
    {if {keyword-supplied? results} then
        set self.results = results}
  }

}

{define-class public open VideoResult

  field public title:#String
  field public play-url:#String
  field public source-title:#String
  field package _run-time:{Nullable uint32} = null
  {getter public {run-time}:uint32
    {return self._run-time.value-or-default}
  }
  {setter public {run-time val:uint32}:void
    set self._run-time = val
  }
  {getter public {run-time-specified?}:bool
    {return self._run-time.value?}
  }
  {method public {unset-run-time}:void
    set self._run-time = null
  }
  field public click-through-page-url:#String
  field public static-thumbnail:#Thumbnail
  {constructor public {default}
  }
  {constructor public 
    {from-keywords
      title:#String = {uninitialized-value-for-type #String},
      play-url:#String = {uninitialized-value-for-type #String},
      source-title:#String = {uninitialized-value-for-type #String},
      run-time:uint32 = {uninitialized-value-for-type uint32},
      click-through-page-url:#String = {uninitialized-value-for-type #String},
      static-thumbnail:#Thumbnail = {uninitialized-value-for-type #Thumbnail}
    }
    {if {keyword-supplied? title} then
        set self.title = title}
    {if {keyword-supplied? play-url} then
        set self.play-url = play-url}
    {if {keyword-supplied? source-title} then
        set self.source-title = source-title}
    {if {keyword-supplied? run-time} then
        set self.run-time = run-time}
    {if {keyword-supplied? click-through-page-url} then
        set self.click-through-page-url = click-through-page-url}
    {if {keyword-supplied? static-thumbnail} then
        set self.static-thumbnail = static-thumbnail}
  }

}

{define-enum public VideoSortOption
    relevance = "Relevance",
    date = "Date"
}

{define-class public open WebRequest

  field package _offset:{Nullable uint32} = null
  {getter public {offset}:uint32
    {return self._offset.value-or-default}
  }
  {setter public {offset val:uint32}:void
    set self._offset = val
  }
  {getter public {offset-specified?}:bool
    {return self._offset.value?}
  }
  {method public {unset-offset}:void
    set self._offset = null
  }
  field package _count:{Nullable uint32} = null
  {getter public {count}:uint32
    {return self._count.value-or-default}
  }
  {setter public {count val:uint32}:void
    set self._count = val
  }
  {getter public {count-specified?}:bool
    {return self._count.value?}
  }
  {method public {unset-count}:void
    set self._count = null
  }
  field public file-type:#String
  field public options:#{Array-of WebSearchOption}
  field public search-tags:#{Array-of String}
  {constructor public {default}
  }
  {constructor public 
    {from-keywords
      offset:uint32 = {uninitialized-value-for-type uint32},
      count:uint32 = {uninitialized-value-for-type uint32},
      file-type:#String = {uninitialized-value-for-type #String},
      options:#{Array-of WebSearchOption} = {uninitialized-value-for-type #{Array-of WebSearchOption}},
      search-tags:#{Array-of String} = {uninitialized-value-for-type #{Array-of String}}
    }
    {if {keyword-supplied? offset} then
        set self.offset = offset}
    {if {keyword-supplied? count} then
        set self.count = count}
    {if {keyword-supplied? file-type} then
        set self.file-type = file-type}
    {if {keyword-supplied? options} then
        set self.options = options}
    {if {keyword-supplied? search-tags} then
        set self.search-tags = search-tags}
  }

}

{define-class public open WebResponse

  field package _total:{Nullable uint32} = null
  {getter public {total}:uint32
    {return self._total.value-or-default}
  }
  {setter public {total val:uint32}:void
    set self._total = val
  }
  {getter public {total-specified?}:bool
    {return self._total.value?}
  }
  {method public {unset-total}:void
    set self._total = null
  }
  field package _offset:{Nullable uint32} = null
  {getter public {offset}:uint32
    {return self._offset.value-or-default}
  }
  {setter public {offset val:uint32}:void
    set self._offset = val
  }
  {getter public {offset-specified?}:bool
    {return self._offset.value?}
  }
  {method public {unset-offset}:void
    set self._offset = null
  }
  field public results:#{Array-of WebResult}
  {constructor public {default}
  }
  {constructor public 
    {from-keywords
      total:uint32 = {uninitialized-value-for-type uint32},
      offset:uint32 = {uninitialized-value-for-type uint32},
      results:#{Array-of WebResult} = {uninitialized-value-for-type #{Array-of WebResult}}
    }
    {if {keyword-supplied? total} then
        set self.total = total}
    {if {keyword-supplied? offset} then
        set self.offset = offset}
    {if {keyword-supplied? results} then
        set self.results = results}
  }

}

{define-class public open WebResult

  field public title:#String
  field public description:#String
  field public url:#String
  field public cache-url:#String
  field public display-url:#String
  field public date-time:#String
  field public search-tags:#{Array-of WebSearchTag}
  field public deep-links:#{Array-of DeepLink}
  {constructor public {default}
  }
  {constructor public 
    {from-keywords
      title:#String = {uninitialized-value-for-type #String},
      description:#String = {uninitialized-value-for-type #String},
      url:#String = {uninitialized-value-for-type #String},
      cache-url:#String = {uninitialized-value-for-type #String},
      display-url:#String = {uninitialized-value-for-type #String},
      date-time:#String = {uninitialized-value-for-type #String},
      search-tags:#{Array-of WebSearchTag} = {uninitialized-value-for-type #{Array-of WebSearchTag}},
      deep-links:#{Array-of DeepLink} = {uninitialized-value-for-type #{Array-of DeepLink}}
    }
    {if {keyword-supplied? title} then
        set self.title = title}
    {if {keyword-supplied? description} then
        set self.description = description}
    {if {keyword-supplied? url} then
        set self.url = url}
    {if {keyword-supplied? cache-url} then
        set self.cache-url = cache-url}
    {if {keyword-supplied? display-url} then
        set self.display-url = display-url}
    {if {keyword-supplied? date-time} then
        set self.date-time = date-time}
    {if {keyword-supplied? search-tags} then
        set self.search-tags = search-tags}
    {if {keyword-supplied? deep-links} then
        set self.deep-links = deep-links}
  }

}

{define-enum public WebSearchOption
    disable-host-collapsing = "DisableHostCollapsing",
    disable-query-alterations = "DisableQueryAlterations"
}

{define-class public open WebSearchTag

  field public name:#String
  field public value:#String
  {constructor public {default}
  }
  {constructor public 
    {from-keywords
      name:#String = {uninitialized-value-for-type #String},
      value:#String = {uninitialized-value-for-type #String}
    }
    {if {keyword-supplied? name} then
        set self.name = name}
    {if {keyword-supplied? value} then
        set self.value = value}
  }

}

