||| Copyright (C) 1998-2009, Sumisho Computer Systems Corp.  All Rights Reserved.
|||
||| An OpenCurl project.

||| Licensed under the Apache License, Version 2.0 (the "License");
||| you may not use this file except in compliance with the License.
||| You may obtain a copy of the License at
||| 
|||     http://www.apache.org/licenses/LICENSE-2.0
||| 
||| Unless required by applicable law or agreed to in writing, software
||| distributed under the License is distributed on an "AS IS" BASIS,
||| WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
||| See the License for the specific language governing permissions and
||| limitations under the License.
{doc-next
    {purpose
        This class holds information about the generated {docref package}s.
        It also serves as a proxy for {docref BookDemoPackageLoader}.
    }
}
{define-class public open BookDemoServiceData
  field public packages:{Array-of Package}
  field protected manifest-location:Url
  field protected loader:BookDemoPackageLoader

  {doc-next
    {purpose
        Creates a {docref BookDemoServiceData}.
    }
    {parameter
        mloc,
        A {docref Url} specifying the location of a {docref manifest}.
    }
  }
  {constructor public {default mloc:Url}

    set self.manifest-location = mloc
    set self.packages = {new {Array-of Package}}
    set self.loader = {new BookDemoPackageLoader, self}
  }

  {doc-next
    {purpose
        Tells the {docref BookDemoPackageLoader} to load all the
        {docref package}s in a {docref manifest}.
    }
  }
  {method public open {load-all-packages}:void
    {self.loader.load-all-packages self.manifest-location}
  }

  {doc-next
    {purpose
        Tells the {docref BookDemoPackageLoader} to load a named
        {docref package} from a {docref manifest}.
    }
  }
  {method public open {load-package name:String}:void
    {self.loader.load-package name, self.manifest-location}
  }

  {doc-next
    {purpose
        Finds the name of the service class to use for a given {docref package}.
    }
    {parameter
        package-name,
        A {docref String} specifying the name of the {docref package}
        to inspect.
    }
    {return-vals
        A {docref String} indicating the name of the class.
    }
  }
  {method protected open {get-class-name package-name:String}:#String
    || These hardcoded strings were determined by inspecting
    || the packages generated from the WSDL files.
    {switch package-name
     case "COM.CURL.WSDL.AmazonSearch" do
        {return "AmazonSearchService"}
     case "COM.CURL.WSDL.BNPrice" do
        {return "BNPrice"}
     case "COM.CURL.WSDL.ISBN" do
        {return "ISBN"}
     case "COM.CURL.WSDL.LookyBookService" do
        {return "LookyBookService"}
     else
        {return null}
    }
  }
}
