{curl 7.0 package}
{package COM.CURL.WSDL.ManufacturerB,
    {compiler-directives careful? = true},
    wsdl = "file:///c:/_Doug/OpenCurl/WSDK/trunk/support/test-cases/wsdl-services/WS-I/ManufacturerB.wsdl"}

|| This file was generated with COM.CURL.WSDK.WSDL
|| WSDL file: file:///c:/_Doug/OpenCurl/WSDK/trunk/support/test-cases/wsdl-services/WS-I/ManufacturerB.wsdl

{import * from COM.CURL.WSDK.SOAP}
{define-class public ManufacturerServiceB {inherits WSDLHTTPRPCPostClient}

  {doc-next 
    {details 
      Submit a purchase order for specified items to the manufacturer.
      A purchase order.
      A response of true indicates the purchase order has been accepted for processing.
      A reason code for the rejection of a given PO that can be matched through the conversationID
                in the callback section of the SOAP header.
      The Configuration fault header indicates why the configuration was invalid and enumerates all
        of the service URLs which were not valid in Configuration header of the request message.
    }
  }
  {method public {submit-po purchase-order:PurchOrdType, configuration:#ConfigurationType = null, start-header:#StartHeaderType = null}:(response:bool)
    let constant request-header-names:{Array-of #XMLName} =
        {{Array-of #XMLName}}
    let constant request-header-types:{Array-of SOAPObjectType} =
        {{Array-of SOAPObjectType}}
    let constant request-headers:{Array-of any} =
        {{Array-of any}}
    {if {keyword-supplied? configuration} then
        {request-header-types.append
            {SOAPObjectType
                xml-type = {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-08/Configuration.xsd", "ConfigurationType"},
                curl-type = ConfigurationType,
                nillable? = true
            }
        }
        {request-header-names.append
           {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-08/Configuration.xsd", "Configuration"}
        }
        {request-headers.append configuration}
    }
    {if {keyword-supplied? start-header} then
        {request-header-types.append
            {SOAPObjectType
                xml-type = {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-10/Manufacturer/CallBack", "StartHeaderType"},
                curl-type = StartHeaderType,
                nillable? = true
            }
        }
        {request-header-names.append
           {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-10/Manufacturer/CallBack", "StartHeader"}
        }
        {request-headers.append start-header}
    }
    let constant (responses:{Array-of any},
         headers:#{Array-of any},
         header-roles:#{Array-of #String},
         header-must-understands:#{Array-of bool},
         root-attributes:#{Array-of XMLAttribute})=
        {self.soap-caller.call
            self.service-location,
            {{Array-of any}
                purchase-order
            },
            {{Array-of #XMLName}
                {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-10/ManufacturerPO.xsd", "PurchaseOrder"}
            },
            {{Array-of SOAPObjectType}
                {SOAPObjectType
                    xml-type = {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-10/ManufacturerPO.xsd", "PurchOrdType"},
                    curl-type = PurchOrdType,
                    nillable? = true
                }
            },
            {{Array-of #XMLName}
                {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-10/ManufacturerPO.xsd", "ackPO"}
            },
            {{Array-of SOAPObjectType}
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "boolean"},
                    curl-type = bool
                }
            },
            null,
            request-header-names = request-header-names,
            request-header-types = request-header-types,
            request-headers = request-headers,
            rpc-style? = false,
            write-type-attribute? = false,
            write-encoding-attribute? = false
        }
    {return
        responses[0] asa bool
    }
  }


  {doc-next 
    {details 
      Submit a purchase order for specified items to the manufacturer.
      A purchase order.
      A response of true indicates the purchase order has been accepted for processing.
      A reason code for the rejection of a given PO that can be matched through the conversationID
                in the callback section of the SOAP header.
      The Configuration fault header indicates why the configuration was invalid and enumerates all
        of the service URLs which were not valid in Configuration header of the request message.
    }
  }
  {method public {async-submit-po purchase-order:PurchOrdType, configuration:#ConfigurationType = null, start-header:#StartHeaderType = null, event-handler:EventHandler, ...:EventHandler}:SOAPHTTPRPCPostAsyncWorker
    let constant request-header-names:{Array-of #XMLName} =
        {{Array-of #XMLName}}
    let constant request-header-types:{Array-of SOAPObjectType} =
        {{Array-of SOAPObjectType}}
    let constant request-headers:{Array-of any} =
        {{Array-of any}}
    {if {keyword-supplied? configuration} then
        {request-header-types.append
            {SOAPObjectType
                xml-type = {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-08/Configuration.xsd", "ConfigurationType"},
                curl-type = ConfigurationType,
                nillable? = true
            }
        }
        {request-header-names.append
           {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-08/Configuration.xsd", "Configuration"}
        }
        {request-headers.append configuration}
    }
    {if {keyword-supplied? start-header} then
        {request-header-types.append
            {SOAPObjectType
                xml-type = {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-10/Manufacturer/CallBack", "StartHeaderType"},
                curl-type = StartHeaderType,
                nillable? = true
            }
        }
        {request-header-names.append
           {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-10/Manufacturer/CallBack", "StartHeader"}
        }
        {request-headers.append start-header}
    }
    {return
        {self.soap-caller.async-call
            self.service-location,
            {{Array-of any}
                purchase-order
            },
            {{Array-of #XMLName}
                {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-10/ManufacturerPO.xsd", "PurchaseOrder"}
            },
            {{Array-of SOAPObjectType}
                {SOAPObjectType
                    xml-type = {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-10/ManufacturerPO.xsd", "PurchOrdType"},
                    curl-type = PurchOrdType,
                    nillable? = true
                }
            },
            {{Array-of #XMLName}
                {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-10/ManufacturerPO.xsd", "ackPO"}
            },
            {{Array-of SOAPObjectType}
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "boolean"},
                    curl-type = bool
                }
            },
            null,
            request-header-names = request-header-names,
            request-header-types = request-header-types,
            request-headers = request-headers,
            rpc-style? = false,
            write-type-attribute? = false,
            write-encoding-attribute? = false,
            event-handler,
            ...
        }
    }
  }

  {method public {register-types
                 }:(type-mapper:SOAPTypeMapper,
                    element-name-to-xml-type:SOAPElementNameToXMLTypeMapper,
                    xml-type-to-curl-type:SOAPXMLTypeToCurlTypeMapper,
                    curl-type-to-xml-type:SOAPCurlTypeToXMLTypeMapper,
                    xml-type-to-element-name:SOAPXMLTypeToElementNameMapper
                   )
    let constant type-mapper:DefaultSOAPTypeMapper =
        {DefaultSOAPTypeMapper}
    let constant element-name-to-xml-type:DefaultSOAPElementNameToXMLTypeMapper =
        {DefaultSOAPElementNameToXMLTypeMapper}
    let constant xml-type-to-curl-type:DefaultSOAPXMLTypeToCurlTypeMapper =
        {DefaultSOAPXMLTypeToCurlTypeMapper}
    let constant curl-type-to-xml-type:DefaultSOAPCurlTypeToXMLTypeMapper =
        {DefaultSOAPCurlTypeToXMLTypeMapper}
    let constant xml-type-to-element-name:DefaultSOAPXMLTypeToElementNameMapper =
        {DefaultSOAPXMLTypeToElementNameMapper}
    {do
        let constant doc-marshaler:SOAPXMLDocumentMarshaler =
            {SOAPXMLDocumentMarshaler
                {SOAPObjectType
                    element-name = {XMLName "http://schemas.xmlsoap.org/soap/envelope/", "Body"},
                    xml-type = {XMLName "http://schemas.xmlsoap.org/soap/envelope/", "Body"},
                    curl-type = Body,
                    nillable? = true
                },
                data-has-root-element? = true
            }
        {doc-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant soap-struct-marshaler:SOAPStructMarshaler =
        {SOAPStructMarshaler
            {SOAPObjectType
                element-name = {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-10/Manufacturer/CallBack", "CallbackFault"},
                xml-type = {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-10/Manufacturer/CallBack", "CallbackFaultType"},
                curl-type = CallbackFaultType,
                nillable? = true
            },
            {{Array-of #XMLName}
                {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-10/Manufacturer/CallBack", "Reason"},
                {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-10/Manufacturer/CallBack", "conversationID"}
            },
            {{Array-of SOAPObjectType}
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "NMTOKEN"},
                    curl-type = {XMLSimpleValue-for "NMTOKEN"}
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String
                }
            },
            {{Array-of String}
                "reason",
                "conversation-id"
            },
            element-name-to-xml-type = element-name-to-xml-type,
            xml-type-to-curl-type = xml-type-to-curl-type,
            curl-type-to-xml-type = curl-type-to-xml-type,
            xml-type-to-element-name = xml-type-to-element-name
        }
        {soap-struct-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant soap-struct-marshaler:SOAPStructMarshaler =
        {SOAPStructMarshaler
            {SOAPObjectType
                element-name = {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-10/Manufacturer/CallBack", "CallbackHeader"},
                xml-type = {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-10/Manufacturer/CallBack", "CallbackHeaderType"},
                curl-type = CallbackHeaderType,
                nillable? = true
            },
            {{Array-of #XMLName}
                {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-10/Manufacturer/CallBack", "conversationID"}
            },
            {{Array-of SOAPObjectType}
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String
                }
            },
            {{Array-of String}
                "conversation-id"
            },
            element-name-to-xml-type = element-name-to-xml-type,
            xml-type-to-curl-type = xml-type-to-curl-type,
            curl-type-to-xml-type = curl-type-to-xml-type,
            xml-type-to-element-name = xml-type-to-element-name
        }
        {soap-struct-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant enum-marshaler:SOAPEnumMarshaler =
            {SOAPEnumMarshaler
                {SOAPObjectType
                    element-name = {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-08/Configuration.xsd", "ErroneousElement"},
                    xml-type = {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-08/Configuration.xsd", "ConfigurationEndpointRole"},
                    curl-type = ConfigurationEndpointRole
                },
                use-value? = true
            }
        {enum-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant soap-struct-marshaler:SOAPStructMarshaler =
        {SOAPStructMarshaler
            {SOAPObjectType
                element-name = {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-08/Configuration.xsd", "ServiceUrl"},
                xml-type = {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-08/Configuration.xsd", "ConfigurationEndpointType"},
                curl-type = ConfigurationEndpointType,
                nillable? = true
            },
            {{Array-of #XMLName}
                {XMLName "", "Role"},
                {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-08/Configuration.xsd", "content"}
            },
            {{Array-of SOAPObjectType}
                {SOAPObjectType
                    element-name = {XMLName "", "Role"},
                    xml-type = {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-08/Configuration.xsd", "ConfigurationEndpointRole"},
                    curl-type = ConfigurationEndpointRole
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "anyURI"},
                    curl-type = Url,
                    nillable? = true
                }
            },
            {{Array-of String}
                "role",
                "content"
            },
            n-attributes = 1,
            simple-content? = true,
            element-name-to-xml-type = element-name-to-xml-type,
            xml-type-to-curl-type = xml-type-to-curl-type,
            curl-type-to-xml-type = curl-type-to-xml-type,
            xml-type-to-element-name = xml-type-to-element-name
        }
        {soap-struct-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant soap-struct-marshaler:SOAPStructMarshaler =
        {SOAPStructMarshaler
            {SOAPObjectType
                element-name = {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-08/Configuration.xsd", "ConfigurationFault"},
                xml-type = {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-08/Configuration.xsd", "ConfigurationFaultType"},
                curl-type = ConfigurationFaultType,
                nillable? = true
            },
            {{Array-of #XMLName}
                {XMLName "http://schemas.xmlsoap.org/soap/envelope/", "mustUnderstand"},
                {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-08/Configuration.xsd", "Message"},
                {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-08/Configuration.xsd", "ErroneousElement"}
            },
            {{Array-of SOAPObjectType}
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "boolean"},
                    curl-type = bool
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String
                },
                {SOAPObjectType
                    element-name = {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-08/Configuration.xsd", "ErroneousElement"},
                    xml-type = {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-08/Configuration.xsd", "_ErroneousElement_ConfigurationFaultType_ConfigurationEndpointRoleArray"},
                    curl-type = ErroneousElement-ConfigurationFaultType-ConfigurationEndpointRoleArray
                }
            },
            {{Array-of String}
                "must-understand",
                "message",
                "erroneous-element"
            },
            n-attributes = 1,
            repeating-elements = 
                {{Set-of XMLName}
                    {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-08/Configuration.xsd", "ErroneousElement"}
              },
            optional-elements = 
                {{Set-of XMLName}
                    {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-08/Configuration.xsd", "ErroneousElement"}
              },
            element-name-to-xml-type = element-name-to-xml-type,
            xml-type-to-curl-type = xml-type-to-curl-type,
            curl-type-to-xml-type = curl-type-to-xml-type,
            xml-type-to-element-name = xml-type-to-element-name
        }
        {soap-struct-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant soap-struct-marshaler:SOAPStructMarshaler =
        {SOAPStructMarshaler
            {SOAPObjectType
                element-name = {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-08/Configuration.xsd", "Configuration"},
                xml-type = {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-08/Configuration.xsd", "ConfigurationType"},
                curl-type = ConfigurationType,
                nillable? = true
            },
            {{Array-of #XMLName}
                {XMLName "http://schemas.xmlsoap.org/soap/envelope/", "mustUnderstand"},
                {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-08/Configuration.xsd", "UserId"},
                {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-08/Configuration.xsd", "ServiceUrl"}
            },
            {{Array-of SOAPObjectType}
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "boolean"},
                    curl-type = bool
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String
                },
                {SOAPObjectType
                    element-name = {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-08/Configuration.xsd", "ServiceUrl"},
                    xml-type = {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-08/Configuration.xsd", "_ServiceUrl_ConfigurationType_ConfigurationEndpointTypeArray"},
                    curl-type = ServiceUrl-ConfigurationType-ConfigurationEndpointTypeArray
                }
            },
            {{Array-of String}
                "must-understand",
                "user-id",
                "service-url"
            },
            n-attributes = 1,
            repeating-elements = 
                {{Set-of XMLName}
                    {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-08/Configuration.xsd", "ServiceUrl"}
              },
            element-name-to-xml-type = element-name-to-xml-type,
            xml-type-to-curl-type = xml-type-to-curl-type,
            curl-type-to-xml-type = curl-type-to-xml-type,
            xml-type-to-element-name = xml-type-to-element-name
        }
        {soap-struct-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant alias-marshaler:SOAPAliasMarshaler =
            {SOAPAliasMarshaler
                {SOAPObjectType
                    element-name = {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-10/ManufacturerPO.xsd", "customerRef"},
                    xml-type = {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-10/ManufacturerPO.xsd", "CustomerReferenceType"},
                    curl-type = CustomerReferenceType,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "normalizedString"},
                    curl-type = {XMLSimpleValue-for "normalizedString"},
                    nillable? = true
                },
                use-type-attribute? = true
            }
        {alias-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant doc-marshaler:SOAPXMLDocumentMarshaler =
            {SOAPXMLDocumentMarshaler
                {SOAPObjectType
                    element-name = {XMLName "http://schemas.xmlsoap.org/soap/envelope/", "detail"},
                    xml-type = {XMLName "http://schemas.xmlsoap.org/soap/envelope/", "detail"},
                    curl-type = Detail,
                    nillable? = true
                },
                data-has-root-element? = true
            }
        {doc-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant list-marshaler:SOAPListMarshaler =
            {SOAPListMarshaler
                {SOAPObjectType
                    xml-type = {XMLName "http://schemas.xmlsoap.org/soap/envelope/", "encodingStyle"},
                    curl-type = EncodingStyle,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "anyURI"},
                    curl-type = Url,
                    nillable? = true
                }
            }
        {list-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant doc-marshaler:SOAPXMLDocumentMarshaler =
            {SOAPXMLDocumentMarshaler
                {SOAPObjectType
                    element-name = {XMLName "http://schemas.xmlsoap.org/soap/envelope/", "Envelope"},
                    xml-type = {XMLName "http://schemas.xmlsoap.org/soap/envelope/", "Envelope"},
                    curl-type = Envelope,
                    nillable? = true
                },
                data-has-root-element? = true
            }
        {doc-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant array-marshaler:SOAPArrayMarshaler =
            {SOAPArrayMarshaler.from-element-type-array
                {{Array-of SOAPObjectType}
                    {SOAPObjectType
                        element-name = {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-08/Configuration.xsd", "ErroneousElement"},
                        xml-type = {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-08/Configuration.xsd", "ConfigurationEndpointRole"},
                        curl-type = ConfigurationEndpointRole
                    },
                    {SOAPObjectType
                        element-name = {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-08/Configuration.xsd", "ErroneousElement"},
                        xml-type = {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-08/Configuration.xsd", "_ErroneousElement_ConfigurationFaultType_ConfigurationEndpointRoleArray"},
                        curl-type = ErroneousElement-ConfigurationFaultType-ConfigurationEndpointRoleArray,
                        nillable? = true
                    }
                },
                element-names =
                    {{Array-of #XMLName}
                        {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-08/Configuration.xsd", "ErroneousElement"}
                    },
                check-element-name = {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-08/Configuration.xsd", "ErroneousElement"},
                xml-type-to-curl-type = xml-type-to-curl-type,
                curl-type-to-xml-type = curl-type-to-xml-type,
                xml-type-to-element-name = xml-type-to-element-name
            }
        {array-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant soap-struct-marshaler:SOAPStructMarshaler =
        {SOAPStructMarshaler
            {SOAPObjectType
                element-name = {XMLName "http://schemas.xmlsoap.org/soap/envelope/", "Fault"},
                xml-type = {XMLName "http://schemas.xmlsoap.org/soap/envelope/", "Fault"},
                curl-type = Fault,
                nillable? = true
            },
            {{Array-of #XMLName}
                {XMLName "http://schemas.xmlsoap.org/soap/envelope/", "faultcode"},
                {XMLName "http://schemas.xmlsoap.org/soap/envelope/", "faultstring"},
                {XMLName "http://schemas.xmlsoap.org/soap/envelope/", "faultactor"},
                {XMLName "http://schemas.xmlsoap.org/soap/envelope/", "detail"}
            },
            {{Array-of SOAPObjectType}
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "QName"},
                    curl-type = XMLName
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "anyURI"},
                    curl-type = Url,
                    nillable? = true
                },
                {SOAPObjectType
                    element-name = {XMLName "http://schemas.xmlsoap.org/soap/envelope/", "detail"},
                    xml-type = {XMLName "http://schemas.xmlsoap.org/soap/envelope/", "detail"},
                    curl-type = Detail,
                    nillable? = true
                }
            },
            {{Array-of String}
                "faultcode",
                "faultstring",
                "faultactor",
                "detail"
            },
            optional-elements = 
                {{Set-of XMLName}
                    {XMLName "http://schemas.xmlsoap.org/soap/envelope/", "faultactor"},
                    {XMLName "http://schemas.xmlsoap.org/soap/envelope/", "detail"}
              },
            element-name-to-xml-type = element-name-to-xml-type,
            xml-type-to-curl-type = xml-type-to-curl-type,
            curl-type-to-xml-type = curl-type-to-xml-type,
            xml-type-to-element-name = xml-type-to-element-name
        }
        {soap-struct-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant doc-marshaler:SOAPXMLDocumentMarshaler =
            {SOAPXMLDocumentMarshaler
                {SOAPObjectType
                    element-name = {XMLName "http://schemas.xmlsoap.org/soap/envelope/", "Header"},
                    xml-type = {XMLName "http://schemas.xmlsoap.org/soap/envelope/", "Header"},
                    curl-type = Header,
                    nillable? = true
                },
                data-has-root-element? = true
            }
        {doc-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant soap-struct-marshaler:SOAPStructMarshaler =
        {SOAPStructMarshaler
            {SOAPObjectType
                element-name = {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-10/ManufacturerPO.xsd", "Item"},
                xml-type = {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-10/ManufacturerPO.xsd", "Item"},
                curl-type = Item,
                nillable? = true
            },
            {{Array-of #XMLName}
                {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-10/ManufacturerPO.xsd", "ID"},
                {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-10/ManufacturerPO.xsd", "qty"},
                {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-10/ManufacturerPO.xsd", "price"}
            },
            {{Array-of SOAPObjectType}
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "nonNegativeInteger"},
                    curl-type = int64
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "unsignedShort"},
                    curl-type = uint16
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "float"},
                    curl-type = float
                }
            },
            {{Array-of String}
                "id",
                "qty",
                "price"
            },
            element-name-to-xml-type = element-name-to-xml-type,
            xml-type-to-curl-type = xml-type-to-curl-type,
            curl-type-to-xml-type = curl-type-to-xml-type,
            xml-type-to-element-name = xml-type-to-element-name
        }
        {soap-struct-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant array-marshaler:SOAPArrayMarshaler =
            {SOAPArrayMarshaler.from-element-type-array
                {{Array-of SOAPObjectType}
                    {SOAPObjectType
                        element-name = {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-10/ManufacturerPO.xsd", "Item"},
                        xml-type = {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-10/ManufacturerPO.xsd", "Item"},
                        curl-type = Item
                    },
                    {SOAPObjectType
                        element-name = {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-10/ManufacturerPO.xsd", "items"},
                        xml-type = {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-10/ManufacturerPO.xsd", "ItemList"},
                        curl-type = ItemList,
                        nillable? = true
                    }
                },
                element-names =
                    {{Array-of #XMLName}
                        {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-10/ManufacturerPO.xsd", "Item"}
                    },
                xml-type-to-curl-type = xml-type-to-curl-type,
                curl-type-to-xml-type = curl-type-to-xml-type,
                xml-type-to-element-name = xml-type-to-element-name
            }
        {array-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant alias-marshaler:SOAPAliasMarshaler =
            {SOAPAliasMarshaler
                {SOAPObjectType
                    element-name = {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-10/ManufacturerSN.xsd", "customerRef"},
                    xml-type = {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-10/ManufacturerSN.xsd", "CustomerReferenceType"},
                    curl-type = ManufacturerSN-CustomerReferenceType,
                    nillable? = true
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "normalizedString"},
                    curl-type = {XMLSimpleValue-for "normalizedString"},
                    nillable? = true
                },
                use-type-attribute? = true
            }
        {alias-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant soap-struct-marshaler:SOAPStructMarshaler =
        {SOAPStructMarshaler
            {SOAPObjectType
                element-name = {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-10/ManufacturerSN.xsd", "Item"},
                xml-type = {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-10/ManufacturerSN.xsd", "Item"},
                curl-type = ManufacturerSN-Item,
                nillable? = true
            },
            {{Array-of #XMLName}
                {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-10/ManufacturerSN.xsd", "ID"},
                {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-10/ManufacturerSN.xsd", "qty"},
                {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-10/ManufacturerSN.xsd", "price"}
            },
            {{Array-of SOAPObjectType}
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "nonNegativeInteger"},
                    curl-type = int64
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "unsignedShort"},
                    curl-type = uint16
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "float"},
                    curl-type = float
                }
            },
            {{Array-of String}
                "id",
                "qty",
                "price"
            },
            element-name-to-xml-type = element-name-to-xml-type,
            xml-type-to-curl-type = xml-type-to-curl-type,
            curl-type-to-xml-type = curl-type-to-xml-type,
            xml-type-to-element-name = xml-type-to-element-name
        }
        {soap-struct-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant array-marshaler:SOAPArrayMarshaler =
            {SOAPArrayMarshaler.from-element-type-array
                {{Array-of SOAPObjectType}
                    {SOAPObjectType
                        element-name = {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-10/ManufacturerSN.xsd", "Item"},
                        xml-type = {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-10/ManufacturerSN.xsd", "Item"},
                        curl-type = ManufacturerSN-Item
                    },
                    {SOAPObjectType
                        element-name = {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-10/ManufacturerSN.xsd", "items"},
                        xml-type = {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-10/ManufacturerSN.xsd", "ItemList"},
                        curl-type = ManufacturerSN-ItemList,
                        nillable? = true
                    }
                },
                element-names =
                    {{Array-of #XMLName}
                        {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-10/ManufacturerSN.xsd", "Item"}
                    },
                xml-type-to-curl-type = xml-type-to-curl-type,
                curl-type-to-xml-type = curl-type-to-xml-type,
                xml-type-to-element-name = xml-type-to-element-name
            }
        {array-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant soap-struct-marshaler:SOAPStructMarshaler =
        {SOAPStructMarshaler
            {SOAPObjectType
                element-name = {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-10/ManufacturerPO.xsd", "PurchaseOrder"},
                xml-type = {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-10/ManufacturerPO.xsd", "PurchOrdType"},
                curl-type = PurchOrdType,
                nillable? = true
            },
            {{Array-of #XMLName}
                {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-10/ManufacturerPO.xsd", "orderNum"},
                {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-10/ManufacturerPO.xsd", "customerRef"},
                {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-10/ManufacturerPO.xsd", "items"},
                {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-10/ManufacturerPO.xsd", "total"}
            },
            {{Array-of SOAPObjectType}
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String
                },
                {SOAPObjectType
                    element-name = {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-10/ManufacturerPO.xsd", "customerRef"},
                    xml-type = {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-10/ManufacturerPO.xsd", "CustomerReferenceType"},
                    curl-type = CustomerReferenceType
                },
                {SOAPObjectType
                    element-name = {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-10/ManufacturerPO.xsd", "items"},
                    xml-type = {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-10/ManufacturerPO.xsd", "ItemList"},
                    curl-type = ItemList
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "float"},
                    curl-type = float
                }
            },
            {{Array-of String}
                "order-num",
                "customer-ref",
                "items",
                "total"
            },
            element-name-to-xml-type = element-name-to-xml-type,
            xml-type-to-curl-type = xml-type-to-curl-type,
            curl-type-to-xml-type = curl-type-to-xml-type,
            xml-type-to-element-name = xml-type-to-element-name
        }
        {soap-struct-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant array-marshaler:SOAPArrayMarshaler =
            {SOAPArrayMarshaler.from-element-type-array
                {{Array-of SOAPObjectType}
                    {SOAPObjectType
                        element-name = {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-08/Configuration.xsd", "ServiceUrl"},
                        xml-type = {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-08/Configuration.xsd", "ConfigurationEndpointType"},
                        curl-type = ConfigurationEndpointType
                    },
                    {SOAPObjectType
                        element-name = {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-08/Configuration.xsd", "ServiceUrl"},
                        xml-type = {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-08/Configuration.xsd", "_ServiceUrl_ConfigurationType_ConfigurationEndpointTypeArray"},
                        curl-type = ServiceUrl-ConfigurationType-ConfigurationEndpointTypeArray,
                        nillable? = true
                    }
                },
                element-names =
                    {{Array-of #XMLName}
                        {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-08/Configuration.xsd", "ServiceUrl"}
                    },
                check-element-name = {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-08/Configuration.xsd", "ServiceUrl"},
                xml-type-to-curl-type = xml-type-to-curl-type,
                curl-type-to-xml-type = curl-type-to-xml-type,
                xml-type-to-element-name = xml-type-to-element-name
            }
        {array-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant soap-struct-marshaler:SOAPStructMarshaler =
        {SOAPStructMarshaler
            {SOAPObjectType
                element-name = {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-10/ManufacturerSN.xsd", "ShipmentNotice"},
                xml-type = {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-10/ManufacturerSN.xsd", "ShipmentNoticeType"},
                curl-type = ShipmentNoticeType,
                nillable? = true
            },
            {{Array-of #XMLName}
                {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-10/ManufacturerSN.xsd", "shipNum"},
                {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-10/ManufacturerSN.xsd", "orderNum"},
                {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-10/ManufacturerSN.xsd", "customerRef"},
                {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-10/ManufacturerSN.xsd", "items"},
                {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-10/ManufacturerSN.xsd", "total"}
            },
            {{Array-of SOAPObjectType}
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String
                },
                {SOAPObjectType
                    element-name = {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-10/ManufacturerSN.xsd", "customerRef"},
                    xml-type = {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-10/ManufacturerSN.xsd", "CustomerReferenceType"},
                    curl-type = ManufacturerSN-CustomerReferenceType
                },
                {SOAPObjectType
                    element-name = {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-10/ManufacturerSN.xsd", "items"},
                    xml-type = {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-10/ManufacturerSN.xsd", "ItemList"},
                    curl-type = ManufacturerSN-ItemList
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "float"},
                    curl-type = float
                }
            },
            {{Array-of String}
                "ship-num",
                "order-num",
                "customer-ref",
                "items",
                "total"
            },
            element-name-to-xml-type = element-name-to-xml-type,
            xml-type-to-curl-type = xml-type-to-curl-type,
            curl-type-to-xml-type = curl-type-to-xml-type,
            xml-type-to-element-name = xml-type-to-element-name
        }
        {soap-struct-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant soap-struct-marshaler:SOAPStructMarshaler =
        {SOAPStructMarshaler
            {SOAPObjectType
                element-name = {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-10/Manufacturer/CallBack", "StartHeader"},
                xml-type = {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-10/Manufacturer/CallBack", "StartHeaderType"},
                curl-type = StartHeaderType,
                nillable? = true
            },
            {{Array-of #XMLName}
                {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-10/Manufacturer/CallBack", "conversationID"},
                {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-10/Manufacturer/CallBack", "callbackLocation"}
            },
            {{Array-of SOAPObjectType}
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String
                },
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "string"},
                    curl-type = String
                }
            },
            {{Array-of String}
                "conversation-id",
                "callback-location"
            },
            element-name-to-xml-type = element-name-to-xml-type,
            xml-type-to-curl-type = xml-type-to-curl-type,
            curl-type-to-xml-type = curl-type-to-xml-type,
            xml-type-to-element-name = xml-type-to-element-name
        }
        {soap-struct-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant soap-struct-marshaler:SOAPStructMarshaler =
        {SOAPStructMarshaler
            {SOAPObjectType
                element-name = {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-10/ManufacturerPO.xsd", "submitPOFault"},
                xml-type = {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-10/ManufacturerPO.xsd", "submitPOFaultType"},
                curl-type = SubmitPOFaultType,
                nillable? = true
            },
            {{Array-of #XMLName}
                {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-10/ManufacturerPO.xsd", "Reason"}
            },
            {{Array-of SOAPObjectType}
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "NMTOKEN"},
                    curl-type = {XMLSimpleValue-for "NMTOKEN"}
                }
            },
            {{Array-of String}
                "reason"
            },
            element-name-to-xml-type = element-name-to-xml-type,
            xml-type-to-curl-type = xml-type-to-curl-type,
            curl-type-to-xml-type = curl-type-to-xml-type,
            xml-type-to-element-name = xml-type-to-element-name
        }
        {soap-struct-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {do
        let constant soap-struct-marshaler:SOAPStructMarshaler =
        {SOAPStructMarshaler
            {SOAPObjectType
                element-name = {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-10/ManufacturerSN.xsd", "submitSNFault"},
                xml-type = {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-10/ManufacturerSN.xsd", "submitSNFaultType"},
                curl-type = SubmitSNFaultType,
                nillable? = true
            },
            {{Array-of #XMLName}
                {XMLName "http://www.ws-i.org/SampleApplications/SupplyChainManagement/2002-10/ManufacturerSN.xsd", "Reason"}
            },
            {{Array-of SOAPObjectType}
                {SOAPObjectType
                    xml-type = {XMLName SOAPTypeMapper.xml-schema-uri, "NMTOKEN"},
                    curl-type = {XMLSimpleValue-for "NMTOKEN"}
                }
            },
            {{Array-of String}
                "reason"
            },
            element-name-to-xml-type = element-name-to-xml-type,
            xml-type-to-curl-type = xml-type-to-curl-type,
            curl-type-to-xml-type = curl-type-to-xml-type,
            xml-type-to-element-name = xml-type-to-element-name
        }
        {soap-struct-marshaler.register
            type-mapper = type-mapper,
            element-name-to-xml-type-mapper = element-name-to-xml-type,
            xml-type-to-curl-type-mapper = xml-type-to-curl-type,
            curl-type-to-xml-type-mapper = curl-type-to-xml-type,
            xml-type-to-element-name-mapper = xml-type-to-element-name
        }
    }
    {return
        type-mapper,
        element-name-to-xml-type,
        xml-type-to-curl-type,
        curl-type-to-xml-type,
        xml-type-to-element-name
    }
  }

  {constructor public
    {default
        service-location:Url =
            {abs-url "http://localhost:8888/ws-i/supplychain/services/ManufacturerB"}
    }
    {construct-super service-location,
        generated-using-version = "3"
    }
  }
}

{let public constant Body:Type = any}

{define-class public open CallbackFaultType

  field public reason:{XMLSimpleValue-for "NMTOKEN"} = {uninitialized-value-for-type {XMLSimpleValue-for "NMTOKEN"}}
  field public conversation-id:String = ""
  {constructor public {default}
  }
  {constructor public 
    {from-keywords
      reason:{XMLSimpleValue-for "NMTOKEN"} = {required-keyword "CallbackFaultType.reason"} asa {XMLSimpleValue-for "NMTOKEN"},
      conversation-id:String = {required-keyword "CallbackFaultType.conversation-id"} asa String
    }
    {if {keyword-supplied? reason} then
        set self.reason = reason}
    {if {keyword-supplied? conversation-id} then
        set self.conversation-id = conversation-id}
  }

}

{define-class public open CallbackHeaderType

  field public conversation-id:String = ""
  {constructor public {default}
  }
  {constructor public 
    {from-keywords
      conversation-id:String = {required-keyword "CallbackHeaderType.conversation-id"} asa String
    }
    {if {keyword-supplied? conversation-id} then
        set self.conversation-id = conversation-id}
  }

}

{define-enum public ConfigurationEndpointRole
    logging-facility = "LoggingFacility",
    retailer = "Retailer",
    warehouse-a = "WarehouseA",
    warehouse-b = "WarehouseB",
    warehouse-c = "WarehouseC",
    manufacturer-a = "ManufacturerA",
    manufacturer-b = "ManufacturerB",
    manufacturer-c = "ManufacturerC"
}

{define-class public open ConfigurationEndpointType

  field public content:Url = {uninitialized-value-for-type Url}
  field public role:ConfigurationEndpointRole
  {constructor public {default}
  }
  {constructor public 
    {from-keywords
      content:Url = {required-keyword "ConfigurationEndpointType.content"} asa Url,
      role:ConfigurationEndpointRole = {uninitialized-value-for-type ConfigurationEndpointRole}
    }
    {if {keyword-supplied? content} then
        set self.content = content}
    {if {keyword-supplied? role} then
        set self.role = role}
  }

}

{define-class public open ConfigurationFaultType

  field public message:String = ""
  field public erroneous-element:#ErroneousElement-ConfigurationFaultType-ConfigurationEndpointRoleArray
  field public must-understand:bool
  {constructor public {default}
  }
  {constructor public 
    {from-keywords
      message:String = {required-keyword "ConfigurationFaultType.message"} asa String,
      erroneous-element:#ErroneousElement-ConfigurationFaultType-ConfigurationEndpointRoleArray = {uninitialized-value-for-type #ErroneousElement-ConfigurationFaultType-ConfigurationEndpointRoleArray},
      must-understand:bool = {uninitialized-value-for-type bool}
    }
    {if {keyword-supplied? message} then
        set self.message = message}
    {if {keyword-supplied? erroneous-element} then
        set self.erroneous-element = erroneous-element}
    {if {keyword-supplied? must-understand} then
        set self.must-understand = must-understand}
  }

}

{define-class public open ConfigurationType

  field public user-id:String = ""
  field public service-url:ServiceUrl-ConfigurationType-ConfigurationEndpointTypeArray = {uninitialized-value-for-type ServiceUrl-ConfigurationType-ConfigurationEndpointTypeArray}
  field public must-understand:bool
  {constructor public {default}
  }
  {constructor public 
    {from-keywords
      user-id:String = {required-keyword "ConfigurationType.user-id"} asa String,
      service-url:ServiceUrl-ConfigurationType-ConfigurationEndpointTypeArray = {required-keyword "ConfigurationType.service-url"} asa ServiceUrl-ConfigurationType-ConfigurationEndpointTypeArray,
      must-understand:bool = {uninitialized-value-for-type bool}
    }
    {if {keyword-supplied? user-id} then
        set self.user-id = user-id}
    {if {keyword-supplied? service-url} then
        set self.service-url = service-url}
    {if {keyword-supplied? must-understand} then
        set self.must-understand = must-understand}
  }

}

{let public constant CustomerReferenceType:Type = {XMLSimpleValue-for "normalizedString"}}

{let public constant Detail:Type = any}

{let public constant EncodingStyle:ClassType = {Array-of Url}}

{let public constant Envelope:Type = any}

{let public constant ErroneousElement-ConfigurationFaultType-ConfigurationEndpointRoleArray:ClassType = {Array-of ConfigurationEndpointRole}}

{define-class public open Fault

  field public faultcode:XMLName = {uninitialized-value-for-type XMLName}
  field public faultstring:String = ""
  field public faultactor:#Url
  field public detail:#Detail
  {constructor public {default}
  }
  {constructor public 
    {from-keywords
      faultcode:XMLName = {required-keyword "Fault.faultcode"} asa XMLName,
      faultstring:String = {required-keyword "Fault.faultstring"} asa String,
      faultactor:#Url = {uninitialized-value-for-type #Url},
      detail:#Detail = {uninitialized-value-for-type #Detail}
    }
    {if {keyword-supplied? faultcode} then
        set self.faultcode = faultcode}
    {if {keyword-supplied? faultstring} then
        set self.faultstring = faultstring}
    {if {keyword-supplied? faultactor} then
        set self.faultactor = faultactor}
    {if {keyword-supplied? detail} then
        set self.detail = detail}
  }

}

{let public constant Header:Type = any}

{define-class public open Item

  field public id:int64
  field public qty:uint16
  field public price:float
  {constructor public {default}
  }
  {constructor public 
    {from-keywords
      id:int64 = {uninitialized-value-for-type int64},
      qty:uint16 = {uninitialized-value-for-type uint16},
      price:float = {uninitialized-value-for-type float}
    }
    {if {keyword-supplied? id} then
        set self.id = id}
    {if {keyword-supplied? qty} then
        set self.qty = qty}
    {if {keyword-supplied? price} then
        set self.price = price}
  }

}

{let public constant ItemList:ClassType = {Array-of Item}}

{let public constant ManufacturerSN-CustomerReferenceType:Type = {XMLSimpleValue-for "normalizedString"}}

{define-class public open ManufacturerSN-Item

  field public id:int64
  field public qty:uint16
  field public price:float
  {constructor public {default}
  }
  {constructor public 
    {from-keywords
      id:int64 = {uninitialized-value-for-type int64},
      qty:uint16 = {uninitialized-value-for-type uint16},
      price:float = {uninitialized-value-for-type float}
    }
    {if {keyword-supplied? id} then
        set self.id = id}
    {if {keyword-supplied? qty} then
        set self.qty = qty}
    {if {keyword-supplied? price} then
        set self.price = price}
  }

}

{let public constant ManufacturerSN-ItemList:ClassType = {Array-of ManufacturerSN-Item}}

{define-class public open PurchOrdType

  field public order-num:String = ""
  field public customer-ref:CustomerReferenceType = {uninitialized-value-for-type CustomerReferenceType}
  field public items:ItemList = {uninitialized-value-for-type ItemList}
  field public total:float
  {constructor public {default}
  }
  {constructor public 
    {from-keywords
      order-num:String = {required-keyword "PurchOrdType.order-num"} asa String,
      customer-ref:CustomerReferenceType = {required-keyword "PurchOrdType.customer-ref"} asa CustomerReferenceType,
      items:ItemList = {required-keyword "PurchOrdType.items"} asa ItemList,
      total:float = {uninitialized-value-for-type float}
    }
    {if {keyword-supplied? order-num} then
        set self.order-num = order-num}
    {if {keyword-supplied? customer-ref} then
        set self.customer-ref = customer-ref}
    {if {keyword-supplied? items} then
        set self.items = items}
    {if {keyword-supplied? total} then
        set self.total = total}
  }

}

{let public constant ServiceUrl-ConfigurationType-ConfigurationEndpointTypeArray:ClassType = {Array-of ConfigurationEndpointType}}

{define-class public open ShipmentNoticeType

  field public ship-num:String = ""
  field public order-num:String = ""
  field public customer-ref:ManufacturerSN-CustomerReferenceType = {uninitialized-value-for-type ManufacturerSN-CustomerReferenceType}
  field public items:ManufacturerSN-ItemList = {uninitialized-value-for-type ManufacturerSN-ItemList}
  field public total:float
  {constructor public {default}
  }
  {constructor public 
    {from-keywords
      ship-num:String = {required-keyword "ShipmentNoticeType.ship-num"} asa String,
      order-num:String = {required-keyword "ShipmentNoticeType.order-num"} asa String,
      customer-ref:ManufacturerSN-CustomerReferenceType = {required-keyword "ShipmentNoticeType.customer-ref"} asa ManufacturerSN-CustomerReferenceType,
      items:ManufacturerSN-ItemList = {required-keyword "ShipmentNoticeType.items"} asa ManufacturerSN-ItemList,
      total:float = {uninitialized-value-for-type float}
    }
    {if {keyword-supplied? ship-num} then
        set self.ship-num = ship-num}
    {if {keyword-supplied? order-num} then
        set self.order-num = order-num}
    {if {keyword-supplied? customer-ref} then
        set self.customer-ref = customer-ref}
    {if {keyword-supplied? items} then
        set self.items = items}
    {if {keyword-supplied? total} then
        set self.total = total}
  }

}

{define-class public open StartHeaderType

  field public conversation-id:String = ""
  field public callback-location:String = ""
  {constructor public {default}
  }
  {constructor public 
    {from-keywords
      conversation-id:String = {required-keyword "StartHeaderType.conversation-id"} asa String,
      callback-location:String = {required-keyword "StartHeaderType.callback-location"} asa String
    }
    {if {keyword-supplied? conversation-id} then
        set self.conversation-id = conversation-id}
    {if {keyword-supplied? callback-location} then
        set self.callback-location = callback-location}
  }

}

{define-class public open SubmitPOFaultType

  field public reason:{XMLSimpleValue-for "NMTOKEN"} = {uninitialized-value-for-type {XMLSimpleValue-for "NMTOKEN"}}
  {constructor public {default}
  }
  {constructor public 
    {from-keywords
      reason:{XMLSimpleValue-for "NMTOKEN"} = {required-keyword "SubmitPOFaultType.reason"} asa {XMLSimpleValue-for "NMTOKEN"}
    }
    {if {keyword-supplied? reason} then
        set self.reason = reason}
  }

}

{define-class public open SubmitSNFaultType

  field public reason:{XMLSimpleValue-for "NMTOKEN"} = {uninitialized-value-for-type {XMLSimpleValue-for "NMTOKEN"}}
  {constructor public {default}
  }
  {constructor public 
    {from-keywords
      reason:{XMLSimpleValue-for "NMTOKEN"} = {required-keyword "SubmitSNFaultType.reason"} asa {XMLSimpleValue-for "NMTOKEN"}
    }
    {if {keyword-supplied? reason} then
        set self.reason = reason}
  }

}

