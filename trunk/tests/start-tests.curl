||| Copyright (C) 1998-2009, Sumisho Computer Systems Corp.  All Rights Reserved.
|||
||| An OpenCurl project.

||| Licensed under the Apache License, Version 2.0 (the "License");
||| you may not use this file except in compliance with the License.
||| You may obtain a copy of the License at
||| 
|||     http://www.apache.org/licenses/LICENSE-2.0
||| 
||| Unless required by applicable law or agreed to in writing, software
||| distributed under the License is distributed on an "AS IS" BASIS,
||| WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
||| See the License for the specific language governing permissions and
||| limitations under the License.

{curl 6.0, 7.0, 8.0 applet}
{applet manifest = "manifest.mcurl",
    {compiler-directives careful? = true}
}
{import * from COM.CURL.CDU.CURL-UNIT}
{import * from COM.CURL.CDU.CURL-UNIT-UI}

{document-style PlainDocument}
{set-document-properties hstretch? = true, vstretch? = true}

|| ===== \\
{import * from CURL.IDE.COVERAGE}
{import COM.CURL.WSDK.WSDL}
{import COM.CURL.WSDK.SOAP}
{import COM.CURL.WSDK.XML-DOCUMENT-MODEL}
{import COM.CURL.WSDK.XML-DISPLAY}
{import COM.CURL.WSDK.XML-ELABORATION}
{import COM.CURL.WSDK.XML-QUERY-FUNCTIONS}
{import COM.CURL.WSDK.RECORDSET-FOR}
{import COM.CURL.WSDK.BIGNUM-WSDK}
{def start-coverage =
    {CommandButton
        label = "Start Coverage",
        {on Action do
            {coverage-enable}
            {coverage-instrument
                COM.CURL.WSDK.WSDL,
                COM.CURL.WSDK.SOAP,
                COM.CURL.WSDK.XML-DOCUMENT-MODEL,
                COM.CURL.WSDK.XML-DISPLAY,
                COM.CURL.WSDK.XML-ELABORATION,
                COM.CURL.WSDK.XML-QUERY-FUNCTIONS,
                COM.CURL.WSDK.RECORDSET-FOR,
                COM.CURL.WSDK.BIGNUM-WSDK
            }
            {coverage-start}
        }}
}
{def stop-coverage =
    {CommandButton
        label = "Stop Coverage",
        {on Action do
            {coverage-stop}
            def data = {coverage-results}
            {CoverageAdjustment.adjust-data data}
            {coverage-view data}
        }}
} 
|| ===== //

{value
    || override standard tests from query arg, if specified
    let query:String = {get-base-url}.query
    let loc:Url = 
        {url
            {if query.size > 1 
             then {query.tail 1}
             else "test-cases/test-cases.scurl"}}
    
    let target:RecordSetTestTarget = {RecordSetTestTarget}
    set TestTarget.current = target

    || model
    let suite:TestSuite = {TestSuite.import loc}
    
    || presentation
    {VBox
        {HBox
            start-coverage,
            stop-coverage,
            {Fill}},
        {test-ui suite}}
}
